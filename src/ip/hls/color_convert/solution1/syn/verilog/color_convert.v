// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_convert_color_convert,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.520000,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1662,HLS_SYN_LUT=1893,HLS_VERSION=2022_1}" *)

module color_convert (
        ap_clk,
        ap_rst_n,
        stream_in_24_TDATA,
        stream_in_24_TVALID,
        stream_in_24_TREADY,
        stream_in_24_TKEEP,
        stream_in_24_TSTRB,
        stream_in_24_TUSER,
        stream_in_24_TLAST,
        stream_out_24_TDATA,
        stream_out_24_TVALID,
        stream_out_24_TREADY,
        stream_out_24_TKEEP,
        stream_out_24_TSTRB,
        stream_out_24_TUSER,
        stream_out_24_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] stream_in_24_TDATA;
input   stream_in_24_TVALID;
output   stream_in_24_TREADY;
input  [2:0] stream_in_24_TKEEP;
input  [2:0] stream_in_24_TSTRB;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;
output  [23:0] stream_out_24_TDATA;
output   stream_out_24_TVALID;
input   stream_out_24_TREADY;
output  [2:0] stream_out_24_TKEEP;
output  [2:0] stream_out_24_TSTRB;
output  [0:0] stream_out_24_TUSER;
output  [0:0] stream_out_24_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire   [9:0] c1_c1;
wire   [9:0] c1_c2;
wire   [9:0] c1_c3;
wire   [9:0] c2_c1;
wire   [9:0] c2_c2;
wire   [9:0] c2_c3;
wire   [9:0] c3_c1;
wire   [9:0] c3_c2;
wire   [9:0] c3_c3;
wire   [9:0] bias_c1;
wire   [9:0] bias_c2;
wire   [9:0] bias_c3;
reg    stream_in_24_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    stream_out_24_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [2:0] tmp_keep_V_reg_1198;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state6_pp0_stage0_iter5;
wire    regslice_both_stream_out_24_V_data_V_U_apdone_blk;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] tmp_keep_V_reg_1198_pp0_iter1_reg;
reg   [2:0] tmp_keep_V_reg_1198_pp0_iter2_reg;
reg   [2:0] tmp_keep_V_reg_1198_pp0_iter3_reg;
reg   [2:0] tmp_keep_V_reg_1198_pp0_iter4_reg;
reg   [2:0] tmp_strb_V_reg_1203;
reg   [2:0] tmp_strb_V_reg_1203_pp0_iter1_reg;
reg   [2:0] tmp_strb_V_reg_1203_pp0_iter2_reg;
reg   [2:0] tmp_strb_V_reg_1203_pp0_iter3_reg;
reg   [2:0] tmp_strb_V_reg_1203_pp0_iter4_reg;
reg   [0:0] tmp_user_V_reg_1208;
reg   [0:0] tmp_user_V_reg_1208_pp0_iter1_reg;
reg   [0:0] tmp_user_V_reg_1208_pp0_iter2_reg;
reg   [0:0] tmp_user_V_reg_1208_pp0_iter3_reg;
reg   [0:0] tmp_user_V_reg_1208_pp0_iter4_reg;
reg   [0:0] tmp_last_V_reg_1213;
reg   [0:0] tmp_last_V_reg_1213_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_1213_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_1213_pp0_iter3_reg;
reg   [0:0] tmp_last_V_reg_1213_pp0_iter4_reg;
wire   [7:0] v_p1_V_fu_275_p1;
reg   [7:0] v_p1_V_reg_1218;
reg   [7:0] v_p2_V_reg_1223;
reg   [7:0] v_p3_V_reg_1228;
reg   [7:0] v_p3_V_reg_1228_pp0_iter1_reg;
reg  signed [9:0] c1_c1_read_reg_1233;
reg  signed [9:0] c1_c2_read_reg_1238;
reg   [9:0] c1_c3_read_reg_1243;
reg  signed [9:0] c1_c3_read_reg_1243_pp0_iter1_reg;
reg   [9:0] rhs_2_reg_1248;
reg   [9:0] rhs_2_reg_1248_pp0_iter1_reg;
reg   [9:0] rhs_2_reg_1248_pp0_iter2_reg;
wire   [7:0] trunc_ln1393_3_fu_299_p1;
reg   [7:0] trunc_ln1393_3_reg_1253;
reg   [7:0] trunc_ln1393_3_reg_1253_pp0_iter1_reg;
reg   [7:0] trunc_ln1393_3_reg_1253_pp0_iter2_reg;
reg  signed [9:0] c2_c1_read_reg_1258;
reg  signed [9:0] c2_c2_read_reg_1263;
reg   [9:0] c2_c3_read_reg_1268;
reg  signed [9:0] c2_c3_read_reg_1268_pp0_iter1_reg;
reg   [9:0] rhs_6_reg_1273;
reg   [9:0] rhs_6_reg_1273_pp0_iter1_reg;
reg   [9:0] rhs_6_reg_1273_pp0_iter2_reg;
wire   [7:0] trunc_ln1393_8_fu_303_p1;
reg   [7:0] trunc_ln1393_8_reg_1278;
reg   [7:0] trunc_ln1393_8_reg_1278_pp0_iter1_reg;
reg   [7:0] trunc_ln1393_8_reg_1278_pp0_iter2_reg;
reg  signed [9:0] c3_c1_read_reg_1283;
reg  signed [9:0] c3_c2_read_reg_1288;
reg   [9:0] c3_c3_read_reg_1293;
reg  signed [9:0] c3_c3_read_reg_1293_pp0_iter1_reg;
reg   [9:0] rhs_10_reg_1298;
reg   [9:0] rhs_10_reg_1298_pp0_iter1_reg;
reg   [9:0] rhs_10_reg_1298_pp0_iter2_reg;
wire   [7:0] trunc_ln1393_14_fu_307_p1;
reg   [7:0] trunc_ln1393_14_reg_1303;
reg   [7:0] trunc_ln1393_14_reg_1303_pp0_iter1_reg;
reg   [7:0] trunc_ln1393_14_reg_1303_pp0_iter2_reg;
wire  signed [17:0] r_V_fu_317_p2;
reg  signed [17:0] r_V_reg_1308;
wire   [15:0] trunc_ln1316_fu_323_p1;
reg   [15:0] trunc_ln1316_reg_1313;
wire  signed [17:0] r_V_4_fu_333_p2;
reg  signed [17:0] r_V_4_reg_1318;
wire   [15:0] trunc_ln1316_1_fu_339_p1;
reg   [15:0] trunc_ln1316_1_reg_1323;
wire  signed [17:0] r_V_6_fu_346_p2;
reg  signed [17:0] r_V_6_reg_1328;
wire   [15:0] trunc_ln1316_2_fu_352_p1;
reg   [15:0] trunc_ln1316_2_reg_1333;
wire  signed [17:0] r_V_7_fu_359_p2;
reg  signed [17:0] r_V_7_reg_1338;
wire   [15:0] trunc_ln1316_3_fu_365_p1;
reg   [15:0] trunc_ln1316_3_reg_1343;
wire  signed [17:0] r_V_9_fu_372_p2;
reg  signed [17:0] r_V_9_reg_1348;
wire   [15:0] trunc_ln1316_4_fu_378_p1;
reg   [15:0] trunc_ln1316_4_reg_1353;
wire  signed [17:0] r_V_10_fu_385_p2;
reg  signed [17:0] r_V_10_reg_1358;
wire   [15:0] trunc_ln1316_5_fu_391_p1;
reg   [15:0] trunc_ln1316_5_reg_1363;
wire   [15:0] add_ln1393_1_fu_401_p2;
reg   [15:0] add_ln1393_1_reg_1368;
wire   [18:0] ret_V_fu_405_p2;
reg   [18:0] ret_V_reg_1373;
wire  signed [17:0] r_V_5_fu_417_p2;
reg  signed [17:0] r_V_5_reg_1378;
wire   [7:0] trunc_ln1393_fu_423_p1;
reg   [7:0] trunc_ln1393_reg_1383;
wire   [7:0] trunc_ln1393_1_fu_427_p1;
reg   [7:0] trunc_ln1393_1_reg_1388;
wire   [15:0] trunc_ln1393_2_fu_431_p1;
reg   [15:0] trunc_ln1393_2_reg_1393;
wire   [15:0] add_ln1393_10_fu_441_p2;
reg   [15:0] add_ln1393_10_reg_1398;
wire   [18:0] ret_V_3_fu_445_p2;
reg   [18:0] ret_V_3_reg_1403;
wire  signed [17:0] r_V_8_fu_454_p2;
reg  signed [17:0] r_V_8_reg_1408;
wire   [7:0] trunc_ln1393_5_fu_460_p1;
reg   [7:0] trunc_ln1393_5_reg_1413;
wire   [7:0] trunc_ln1393_6_fu_464_p1;
reg   [7:0] trunc_ln1393_6_reg_1418;
wire   [15:0] trunc_ln1393_7_fu_468_p1;
reg   [15:0] trunc_ln1393_7_reg_1423;
wire   [15:0] add_ln1393_17_fu_478_p2;
reg   [15:0] add_ln1393_17_reg_1428;
wire   [18:0] ret_V_6_fu_482_p2;
reg   [18:0] ret_V_6_reg_1433;
wire  signed [17:0] r_V_11_fu_491_p2;
reg  signed [17:0] r_V_11_reg_1438;
wire   [7:0] trunc_ln1393_10_fu_497_p1;
reg   [7:0] trunc_ln1393_10_reg_1443;
wire   [7:0] trunc_ln1393_11_fu_501_p1;
reg   [7:0] trunc_ln1393_11_reg_1448;
wire   [15:0] trunc_ln1393_12_fu_505_p1;
reg   [15:0] trunc_ln1393_12_reg_1453;
reg   [0:0] p_Result_s_reg_1458;
reg   [0:0] p_Result_s_reg_1458_pp0_iter4_reg;
reg   [7:0] p_Val2_2_reg_1465;
reg   [0:0] p_Result_1_reg_1470;
reg   [0:0] tmp_5_reg_1476;
reg   [6:0] trunc_ln423_3_reg_1482;
reg   [3:0] tmp_reg_1487;
reg   [0:0] p_Result_2_reg_1493;
reg   [0:0] p_Result_2_reg_1493_pp0_iter4_reg;
reg   [7:0] p_Val2_5_reg_1500;
reg   [0:0] p_Result_3_reg_1505;
reg   [0:0] tmp_9_reg_1511;
reg   [6:0] trunc_ln423_4_reg_1517;
reg   [3:0] tmp_1_reg_1522;
reg   [0:0] p_Result_4_reg_1528;
reg   [0:0] p_Result_4_reg_1528_pp0_iter4_reg;
reg   [7:0] p_Val2_8_reg_1535;
reg   [0:0] p_Result_5_reg_1540;
reg   [0:0] tmp_13_reg_1546;
reg   [6:0] trunc_ln423_5_reg_1552;
reg   [3:0] tmp_2_reg_1557;
wire   [7:0] p_Val2_3_fu_827_p2;
reg   [7:0] p_Val2_3_reg_1563;
wire   [6:0] add_ln922_fu_832_p2;
reg   [6:0] add_ln922_reg_1569;
wire   [0:0] or_ln941_fu_876_p2;
reg   [0:0] or_ln941_reg_1574;
wire   [0:0] and_ln937_fu_887_p2;
reg   [0:0] and_ln937_reg_1580;
wire   [7:0] p_Val2_6_fu_898_p2;
reg   [7:0] p_Val2_6_reg_1586;
wire   [6:0] add_ln922_1_fu_903_p2;
reg   [6:0] add_ln922_1_reg_1592;
wire   [0:0] or_ln941_1_fu_947_p2;
reg   [0:0] or_ln941_1_reg_1597;
wire   [0:0] and_ln937_1_fu_958_p2;
reg   [0:0] and_ln937_1_reg_1603;
wire   [7:0] p_Val2_9_fu_969_p2;
reg   [7:0] p_Val2_9_reg_1609;
wire   [6:0] add_ln922_2_fu_974_p2;
reg   [6:0] add_ln922_2_reg_1615;
wire   [0:0] or_ln941_2_fu_1018_p2;
reg   [0:0] or_ln941_2_reg_1620;
wire   [0:0] and_ln937_2_fu_1029_p2;
reg   [0:0] and_ln937_2_reg_1626;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] r_V_fu_317_p1;
wire   [17:0] zext_ln1319_fu_311_p1;
wire   [7:0] r_V_4_fu_333_p1;
wire   [17:0] zext_ln1319_1_fu_327_p1;
wire   [7:0] r_V_6_fu_346_p1;
wire   [7:0] r_V_7_fu_359_p1;
wire   [7:0] r_V_9_fu_372_p1;
wire   [7:0] r_V_10_fu_385_p1;
wire  signed [18:0] sext_ln859_1_fu_398_p1;
wire  signed [18:0] sext_ln859_fu_395_p1;
wire   [7:0] r_V_5_fu_417_p1;
wire   [17:0] zext_ln1319_2_fu_411_p1;
wire  signed [18:0] sext_ln859_5_fu_438_p1;
wire  signed [18:0] sext_ln859_4_fu_435_p1;
wire   [7:0] r_V_8_fu_454_p1;
wire  signed [18:0] sext_ln859_9_fu_475_p1;
wire  signed [18:0] sext_ln859_8_fu_472_p1;
wire   [7:0] r_V_11_fu_491_p1;
wire  signed [19:0] sext_ln859_2_fu_509_p1;
wire  signed [19:0] sext_ln859_3_fu_512_p1;
wire   [17:0] rhs_3_fu_521_p3;
wire  signed [19:0] sext_ln1393_fu_528_p1;
wire   [19:0] ret_V_1_fu_515_p2;
wire   [15:0] trunc_ln1393_4_fu_536_p3;
wire   [15:0] add_ln1393_fu_532_p2;
wire   [19:0] ret_V_2_fu_543_p2;
wire   [15:0] add_ln1393_3_fu_553_p2;
wire   [7:0] add_ln1393_2_fu_549_p2;
wire  signed [19:0] sext_ln859_6_fu_613_p1;
wire  signed [19:0] sext_ln859_7_fu_616_p1;
wire   [17:0] rhs_7_fu_625_p3;
wire  signed [19:0] sext_ln1393_1_fu_632_p1;
wire   [19:0] ret_V_4_fu_619_p2;
wire   [15:0] trunc_ln1393_9_fu_640_p3;
wire   [15:0] add_ln1393_6_fu_636_p2;
wire   [19:0] ret_V_5_fu_647_p2;
wire   [15:0] add_ln1393_9_fu_657_p2;
wire   [7:0] add_ln1393_8_fu_653_p2;
wire  signed [19:0] sext_ln859_10_fu_717_p1;
wire  signed [19:0] sext_ln859_11_fu_720_p1;
wire   [17:0] rhs_11_fu_729_p3;
wire  signed [19:0] sext_ln1393_2_fu_736_p1;
wire   [19:0] ret_V_7_fu_723_p2;
wire   [15:0] trunc_ln1393_s_fu_744_p3;
wire   [15:0] add_ln1393_12_fu_740_p2;
wire   [19:0] ret_V_8_fu_751_p2;
wire   [15:0] add_ln1393_15_fu_761_p2;
wire   [7:0] add_ln1393_14_fu_757_p2;
wire   [7:0] zext_ln423_fu_821_p1;
wire   [6:0] zext_ln423_1_fu_824_p1;
wire   [0:0] tmp_6_fu_847_p3;
wire   [0:0] Range1_all_zeros_fu_842_p2;
wire   [0:0] Range1_all_ones_fu_837_p2;
wire   [0:0] select_ln934_fu_861_p3;
wire   [0:0] deleted_zeros_fu_869_p3;
wire   [0:0] xor_ln424_fu_855_p2;
wire   [0:0] and_ln937_3_fu_881_p2;
wire   [7:0] zext_ln423_2_fu_892_p1;
wire   [6:0] zext_ln423_3_fu_895_p1;
wire   [0:0] tmp_10_fu_918_p3;
wire   [0:0] Range1_all_zeros_1_fu_913_p2;
wire   [0:0] Range1_all_ones_1_fu_908_p2;
wire   [0:0] select_ln934_1_fu_932_p3;
wire   [0:0] deleted_zeros_1_fu_940_p3;
wire   [0:0] xor_ln424_1_fu_926_p2;
wire   [0:0] and_ln937_4_fu_952_p2;
wire   [7:0] zext_ln423_4_fu_963_p1;
wire   [6:0] zext_ln423_5_fu_966_p1;
wire   [0:0] tmp_14_fu_989_p3;
wire   [0:0] Range1_all_zeros_2_fu_984_p2;
wire   [0:0] Range1_all_ones_2_fu_979_p2;
wire   [0:0] select_ln934_2_fu_1003_p3;
wire   [0:0] deleted_zeros_2_fu_1011_p3;
wire   [0:0] xor_ln424_2_fu_997_p2;
wire   [0:0] and_ln937_5_fu_1023_p2;
wire   [6:0] select_ln404_fu_1044_p3;
wire   [0:0] xor_ln937_fu_1039_p2;
wire   [0:0] and_ln856_fu_1054_p2;
wire   [0:0] overflow_fu_1034_p2;
wire   [7:0] zext_ln856_fu_1050_p1;
wire   [7:0] select_ln856_fu_1065_p3;
wire   [0:0] or_ln856_fu_1059_p2;
wire   [7:0] select_ln402_fu_1071_p3;
wire   [6:0] select_ln404_1_fu_1095_p3;
wire   [0:0] xor_ln937_1_fu_1090_p2;
wire   [0:0] and_ln856_1_fu_1105_p2;
wire   [0:0] overflow_1_fu_1085_p2;
wire   [7:0] zext_ln856_1_fu_1101_p1;
wire   [7:0] select_ln856_1_fu_1116_p3;
wire   [0:0] or_ln856_1_fu_1110_p2;
wire   [7:0] select_ln402_1_fu_1122_p3;
wire   [6:0] select_ln404_2_fu_1146_p3;
wire   [0:0] xor_ln937_2_fu_1141_p2;
wire   [0:0] and_ln856_2_fu_1156_p2;
wire   [0:0] overflow_2_fu_1136_p2;
wire   [7:0] zext_ln856_2_fu_1152_p1;
wire   [7:0] select_ln856_2_fu_1167_p3;
wire   [0:0] or_ln856_2_fu_1161_p2;
wire   [7:0] select_ln402_2_fu_1173_p3;
wire   [7:0] out3_V_fu_1180_p3;
wire   [7:0] out2_V_fu_1129_p3;
wire   [7:0] out1_V_fu_1078_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_stream_in_24_V_data_V_U_apdone_blk;
wire   [23:0] stream_in_24_TDATA_int_regslice;
wire    stream_in_24_TVALID_int_regslice;
reg    stream_in_24_TREADY_int_regslice;
wire    regslice_both_stream_in_24_V_data_V_U_ack_in;
wire    regslice_both_stream_in_24_V_keep_V_U_apdone_blk;
wire   [2:0] stream_in_24_TKEEP_int_regslice;
wire    regslice_both_stream_in_24_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_24_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_24_V_strb_V_U_apdone_blk;
wire   [2:0] stream_in_24_TSTRB_int_regslice;
wire    regslice_both_stream_in_24_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_24_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_24_V_user_V_U_apdone_blk;
wire   [0:0] stream_in_24_TUSER_int_regslice;
wire    regslice_both_stream_in_24_V_user_V_U_vld_out;
wire    regslice_both_stream_in_24_V_user_V_U_ack_in;
wire    regslice_both_stream_in_24_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_24_TLAST_int_regslice;
wire    regslice_both_stream_in_24_V_last_V_U_vld_out;
wire    regslice_both_stream_in_24_V_last_V_U_ack_in;
wire   [23:0] stream_out_24_TDATA_int_regslice;
reg    stream_out_24_TVALID_int_regslice;
wire    stream_out_24_TREADY_int_regslice;
wire    regslice_both_stream_out_24_V_data_V_U_vld_out;
wire    regslice_both_stream_out_24_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_24_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_24_V_user_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_user_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_user_V_U_vld_out;
wire    regslice_both_stream_out_24_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_24_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_24_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

color_convert_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .c1_c1(c1_c1),
    .c1_c2(c1_c2),
    .c1_c3(c1_c3),
    .c2_c1(c2_c1),
    .c2_c2(c2_c2),
    .c2_c3(c2_c3),
    .c3_c1(c3_c1),
    .c3_c2(c3_c2),
    .c3_c3(c3_c3),
    .bias_c1(bias_c1),
    .bias_c2(bias_c2),
    .bias_c3(bias_c3)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U1(
    .din0(c1_c1_read_reg_1233),
    .din1(r_V_fu_317_p1),
    .dout(r_V_fu_317_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U2(
    .din0(c1_c2_read_reg_1238),
    .din1(r_V_4_fu_333_p1),
    .dout(r_V_4_fu_333_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U3(
    .din0(c2_c1_read_reg_1258),
    .din1(r_V_6_fu_346_p1),
    .dout(r_V_6_fu_346_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U4(
    .din0(c2_c2_read_reg_1263),
    .din1(r_V_7_fu_359_p1),
    .dout(r_V_7_fu_359_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U5(
    .din0(c3_c1_read_reg_1283),
    .din1(r_V_9_fu_372_p1),
    .dout(r_V_9_fu_372_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U6(
    .din0(c3_c2_read_reg_1288),
    .din1(r_V_10_fu_385_p1),
    .dout(r_V_10_fu_385_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U7(
    .din0(c1_c3_read_reg_1243_pp0_iter1_reg),
    .din1(r_V_5_fu_417_p1),
    .dout(r_V_5_fu_417_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U8(
    .din0(c2_c3_read_reg_1268_pp0_iter1_reg),
    .din1(r_V_8_fu_454_p1),
    .dout(r_V_8_fu_454_p2)
);

color_convert_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U9(
    .din0(c3_c3_read_reg_1293_pp0_iter1_reg),
    .din1(r_V_11_fu_491_p1),
    .dout(r_V_11_fu_491_p2)
);

color_convert_regslice_both #(
    .DataWidth( 24 ))
regslice_both_stream_in_24_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TDATA),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_data_V_U_ack_in),
    .data_out(stream_in_24_TDATA_int_regslice),
    .vld_out(stream_in_24_TVALID_int_regslice),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_data_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_in_24_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TKEEP),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_keep_V_U_ack_in),
    .data_out(stream_in_24_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_keep_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_keep_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_in_24_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TSTRB),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_strb_V_U_ack_in),
    .data_out(stream_in_24_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_strb_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_strb_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_24_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TUSER),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_user_V_U_ack_in),
    .data_out(stream_in_24_TUSER_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_user_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_user_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_24_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_24_TLAST),
    .vld_in(stream_in_24_TVALID),
    .ack_in(regslice_both_stream_in_24_V_last_V_U_ack_in),
    .data_out(stream_in_24_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_24_V_last_V_U_vld_out),
    .ack_out(stream_in_24_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_24_V_last_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 24 ))
regslice_both_stream_out_24_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_out_24_TDATA_int_regslice),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(stream_out_24_TREADY_int_regslice),
    .data_out(stream_out_24_TDATA),
    .vld_out(regslice_both_stream_out_24_V_data_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_data_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_out_24_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_1198_pp0_iter4_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_24_TKEEP),
    .vld_out(regslice_both_stream_out_24_V_keep_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_keep_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 3 ))
regslice_both_stream_out_24_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_1203_pp0_iter4_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_24_TSTRB),
    .vld_out(regslice_both_stream_out_24_V_strb_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_strb_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_24_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_1208_pp0_iter4_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_user_V_U_ack_in_dummy),
    .data_out(stream_out_24_TUSER),
    .vld_out(regslice_both_stream_out_24_V_user_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_user_V_U_apdone_blk)
);

color_convert_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_24_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_1213_pp0_iter4_reg),
    .vld_in(stream_out_24_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_24_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_24_TLAST),
    .vld_out(regslice_both_stream_out_24_V_last_V_U_vld_out),
    .ack_out(stream_out_24_TREADY),
    .apdone_blk(regslice_both_stream_out_24_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1393_10_reg_1398 <= add_ln1393_10_fu_441_p2;
        add_ln1393_17_reg_1428 <= add_ln1393_17_fu_478_p2;
        add_ln1393_1_reg_1368 <= add_ln1393_1_fu_401_p2;
        and_ln937_1_reg_1603 <= and_ln937_1_fu_958_p2;
        and_ln937_2_reg_1626 <= and_ln937_2_fu_1029_p2;
        and_ln937_reg_1580 <= and_ln937_fu_887_p2;
        or_ln941_1_reg_1597 <= or_ln941_1_fu_947_p2;
        or_ln941_2_reg_1620 <= or_ln941_2_fu_1018_p2;
        or_ln941_reg_1574 <= or_ln941_fu_876_p2;
        p_Result_1_reg_1470 <= add_ln1393_3_fu_553_p2[32'd15];
        p_Result_2_reg_1493 <= ret_V_5_fu_647_p2[32'd19];
        p_Result_2_reg_1493_pp0_iter4_reg <= p_Result_2_reg_1493;
        p_Result_3_reg_1505 <= add_ln1393_9_fu_657_p2[32'd15];
        p_Result_4_reg_1528 <= ret_V_8_fu_751_p2[32'd19];
        p_Result_4_reg_1528_pp0_iter4_reg <= p_Result_4_reg_1528;
        p_Result_5_reg_1540 <= add_ln1393_15_fu_761_p2[32'd15];
        p_Result_s_reg_1458 <= ret_V_2_fu_543_p2[32'd19];
        p_Result_s_reg_1458_pp0_iter4_reg <= p_Result_s_reg_1458;
        p_Val2_2_reg_1465 <= {{add_ln1393_3_fu_553_p2[15:8]}};
        p_Val2_3_reg_1563 <= p_Val2_3_fu_827_p2;
        p_Val2_5_reg_1500 <= {{add_ln1393_9_fu_657_p2[15:8]}};
        p_Val2_6_reg_1586 <= p_Val2_6_fu_898_p2;
        p_Val2_8_reg_1535 <= {{add_ln1393_15_fu_761_p2[15:8]}};
        p_Val2_9_reg_1609 <= p_Val2_9_fu_969_p2;
        r_V_11_reg_1438 <= r_V_11_fu_491_p2;
        r_V_5_reg_1378 <= r_V_5_fu_417_p2;
        r_V_8_reg_1408 <= r_V_8_fu_454_p2;
        ret_V_3_reg_1403 <= ret_V_3_fu_445_p2;
        ret_V_6_reg_1433 <= ret_V_6_fu_482_p2;
        ret_V_reg_1373 <= ret_V_fu_405_p2;
        rhs_10_reg_1298_pp0_iter2_reg <= rhs_10_reg_1298_pp0_iter1_reg;
        rhs_2_reg_1248_pp0_iter2_reg <= rhs_2_reg_1248_pp0_iter1_reg;
        rhs_6_reg_1273_pp0_iter2_reg <= rhs_6_reg_1273_pp0_iter1_reg;
        tmp_13_reg_1546 <= add_ln1393_14_fu_757_p2[32'd7];
        tmp_1_reg_1522 <= {{ret_V_5_fu_647_p2[19:16]}};
        tmp_2_reg_1557 <= {{ret_V_8_fu_751_p2[19:16]}};
        tmp_5_reg_1476 <= add_ln1393_2_fu_549_p2[32'd7];
        tmp_9_reg_1511 <= add_ln1393_8_fu_653_p2[32'd7];
        tmp_keep_V_reg_1198_pp0_iter2_reg <= tmp_keep_V_reg_1198_pp0_iter1_reg;
        tmp_keep_V_reg_1198_pp0_iter3_reg <= tmp_keep_V_reg_1198_pp0_iter2_reg;
        tmp_keep_V_reg_1198_pp0_iter4_reg <= tmp_keep_V_reg_1198_pp0_iter3_reg;
        tmp_last_V_reg_1213_pp0_iter2_reg <= tmp_last_V_reg_1213_pp0_iter1_reg;
        tmp_last_V_reg_1213_pp0_iter3_reg <= tmp_last_V_reg_1213_pp0_iter2_reg;
        tmp_last_V_reg_1213_pp0_iter4_reg <= tmp_last_V_reg_1213_pp0_iter3_reg;
        tmp_reg_1487 <= {{ret_V_2_fu_543_p2[19:16]}};
        tmp_strb_V_reg_1203_pp0_iter2_reg <= tmp_strb_V_reg_1203_pp0_iter1_reg;
        tmp_strb_V_reg_1203_pp0_iter3_reg <= tmp_strb_V_reg_1203_pp0_iter2_reg;
        tmp_strb_V_reg_1203_pp0_iter4_reg <= tmp_strb_V_reg_1203_pp0_iter3_reg;
        tmp_user_V_reg_1208_pp0_iter2_reg <= tmp_user_V_reg_1208_pp0_iter1_reg;
        tmp_user_V_reg_1208_pp0_iter3_reg <= tmp_user_V_reg_1208_pp0_iter2_reg;
        tmp_user_V_reg_1208_pp0_iter4_reg <= tmp_user_V_reg_1208_pp0_iter3_reg;
        trunc_ln1393_10_reg_1443 <= trunc_ln1393_10_fu_497_p1;
        trunc_ln1393_11_reg_1448 <= trunc_ln1393_11_fu_501_p1;
        trunc_ln1393_12_reg_1453 <= trunc_ln1393_12_fu_505_p1;
        trunc_ln1393_14_reg_1303_pp0_iter2_reg <= trunc_ln1393_14_reg_1303_pp0_iter1_reg;
        trunc_ln1393_1_reg_1388 <= trunc_ln1393_1_fu_427_p1;
        trunc_ln1393_2_reg_1393 <= trunc_ln1393_2_fu_431_p1;
        trunc_ln1393_3_reg_1253_pp0_iter2_reg <= trunc_ln1393_3_reg_1253_pp0_iter1_reg;
        trunc_ln1393_5_reg_1413 <= trunc_ln1393_5_fu_460_p1;
        trunc_ln1393_6_reg_1418 <= trunc_ln1393_6_fu_464_p1;
        trunc_ln1393_7_reg_1423 <= trunc_ln1393_7_fu_468_p1;
        trunc_ln1393_8_reg_1278_pp0_iter2_reg <= trunc_ln1393_8_reg_1278_pp0_iter1_reg;
        trunc_ln1393_reg_1383 <= trunc_ln1393_fu_423_p1;
        trunc_ln423_3_reg_1482 <= {{add_ln1393_3_fu_553_p2[14:8]}};
        trunc_ln423_4_reg_1517 <= {{add_ln1393_9_fu_657_p2[14:8]}};
        trunc_ln423_5_reg_1552 <= {{add_ln1393_15_fu_761_p2[14:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_Result_2_reg_1493 == 1'd1))) begin
        add_ln922_1_reg_1592 <= add_ln922_1_fu_903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_Result_4_reg_1528 == 1'd1))) begin
        add_ln922_2_reg_1615 <= add_ln922_2_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (p_Result_s_reg_1458 == 1'd1))) begin
        add_ln922_reg_1569 <= add_ln922_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c1_c1_read_reg_1233 <= c1_c1;
        c1_c2_read_reg_1238 <= c1_c2;
        c1_c3_read_reg_1243 <= c1_c3;
        c1_c3_read_reg_1243_pp0_iter1_reg <= c1_c3_read_reg_1243;
        c2_c1_read_reg_1258 <= c2_c1;
        c2_c2_read_reg_1263 <= c2_c2;
        c2_c3_read_reg_1268 <= c2_c3;
        c2_c3_read_reg_1268_pp0_iter1_reg <= c2_c3_read_reg_1268;
        c3_c1_read_reg_1283 <= c3_c1;
        c3_c2_read_reg_1288 <= c3_c2;
        c3_c3_read_reg_1293 <= c3_c3;
        c3_c3_read_reg_1293_pp0_iter1_reg <= c3_c3_read_reg_1293;
        r_V_10_reg_1358 <= r_V_10_fu_385_p2;
        r_V_4_reg_1318 <= r_V_4_fu_333_p2;
        r_V_6_reg_1328 <= r_V_6_fu_346_p2;
        r_V_7_reg_1338 <= r_V_7_fu_359_p2;
        r_V_9_reg_1348 <= r_V_9_fu_372_p2;
        r_V_reg_1308 <= r_V_fu_317_p2;
        rhs_10_reg_1298 <= bias_c3;
        rhs_10_reg_1298_pp0_iter1_reg <= rhs_10_reg_1298;
        rhs_2_reg_1248 <= bias_c1;
        rhs_2_reg_1248_pp0_iter1_reg <= rhs_2_reg_1248;
        rhs_6_reg_1273 <= bias_c2;
        rhs_6_reg_1273_pp0_iter1_reg <= rhs_6_reg_1273;
        tmp_keep_V_reg_1198 <= stream_in_24_TKEEP_int_regslice;
        tmp_keep_V_reg_1198_pp0_iter1_reg <= tmp_keep_V_reg_1198;
        tmp_last_V_reg_1213 <= stream_in_24_TLAST_int_regslice;
        tmp_last_V_reg_1213_pp0_iter1_reg <= tmp_last_V_reg_1213;
        tmp_strb_V_reg_1203 <= stream_in_24_TSTRB_int_regslice;
        tmp_strb_V_reg_1203_pp0_iter1_reg <= tmp_strb_V_reg_1203;
        tmp_user_V_reg_1208 <= stream_in_24_TUSER_int_regslice;
        tmp_user_V_reg_1208_pp0_iter1_reg <= tmp_user_V_reg_1208;
        trunc_ln1316_1_reg_1323 <= trunc_ln1316_1_fu_339_p1;
        trunc_ln1316_2_reg_1333 <= trunc_ln1316_2_fu_352_p1;
        trunc_ln1316_3_reg_1343 <= trunc_ln1316_3_fu_365_p1;
        trunc_ln1316_4_reg_1353 <= trunc_ln1316_4_fu_378_p1;
        trunc_ln1316_5_reg_1363 <= trunc_ln1316_5_fu_391_p1;
        trunc_ln1316_reg_1313 <= trunc_ln1316_fu_323_p1;
        trunc_ln1393_14_reg_1303 <= trunc_ln1393_14_fu_307_p1;
        trunc_ln1393_14_reg_1303_pp0_iter1_reg <= trunc_ln1393_14_reg_1303;
        trunc_ln1393_3_reg_1253 <= trunc_ln1393_3_fu_299_p1;
        trunc_ln1393_3_reg_1253_pp0_iter1_reg <= trunc_ln1393_3_reg_1253;
        trunc_ln1393_8_reg_1278 <= trunc_ln1393_8_fu_303_p1;
        trunc_ln1393_8_reg_1278_pp0_iter1_reg <= trunc_ln1393_8_reg_1278;
        v_p1_V_reg_1218 <= v_p1_V_fu_275_p1;
        v_p2_V_reg_1223 <= {{stream_in_24_TDATA_int_regslice[15:8]}};
        v_p3_V_reg_1228 <= {{stream_in_24_TDATA_int_regslice[23:16]}};
        v_p3_V_reg_1228_pp0_iter1_reg <= v_p3_V_reg_1228;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_TVALID_int_regslice;
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_24_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_24_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_24_TDATA_blk_n = stream_out_24_TREADY_int_regslice;
    end else begin
        stream_out_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        stream_out_24_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_24_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_908_p2 = ((tmp_1_reg_1522 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_979_p2 = ((tmp_2_reg_1557 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_837_p2 = ((tmp_reg_1487 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_913_p2 = ((tmp_1_reg_1522 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_984_p2 = ((tmp_2_reg_1557 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_842_p2 = ((tmp_reg_1487 == 4'd0) ? 1'b1 : 1'b0);

assign add_ln1393_10_fu_441_p2 = (trunc_ln1316_3_reg_1343 + trunc_ln1316_2_reg_1333);

assign add_ln1393_12_fu_740_p2 = (add_ln1393_17_reg_1428 + trunc_ln1393_12_reg_1453);

assign add_ln1393_14_fu_757_p2 = (trunc_ln1393_11_reg_1448 + trunc_ln1393_10_reg_1443);

assign add_ln1393_15_fu_761_p2 = (trunc_ln1393_s_fu_744_p3 + add_ln1393_12_fu_740_p2);

assign add_ln1393_17_fu_478_p2 = (trunc_ln1316_5_reg_1363 + trunc_ln1316_4_reg_1353);

assign add_ln1393_1_fu_401_p2 = (trunc_ln1316_1_reg_1323 + trunc_ln1316_reg_1313);

assign add_ln1393_2_fu_549_p2 = (trunc_ln1393_1_reg_1388 + trunc_ln1393_reg_1383);

assign add_ln1393_3_fu_553_p2 = (trunc_ln1393_4_fu_536_p3 + add_ln1393_fu_532_p2);

assign add_ln1393_6_fu_636_p2 = (add_ln1393_10_reg_1398 + trunc_ln1393_7_reg_1423);

assign add_ln1393_8_fu_653_p2 = (trunc_ln1393_6_reg_1418 + trunc_ln1393_5_reg_1413);

assign add_ln1393_9_fu_657_p2 = (trunc_ln1393_9_fu_640_p3 + add_ln1393_6_fu_636_p2);

assign add_ln1393_fu_532_p2 = (add_ln1393_1_reg_1368 + trunc_ln1393_2_reg_1393);

assign add_ln922_1_fu_903_p2 = (zext_ln423_3_fu_895_p1 + trunc_ln423_4_reg_1517);

assign add_ln922_2_fu_974_p2 = (zext_ln423_5_fu_966_p1 + trunc_ln423_5_reg_1552);

assign add_ln922_fu_832_p2 = (zext_ln423_1_fu_824_p1 + trunc_ln423_3_reg_1482);

assign and_ln856_1_fu_1105_p2 = (xor_ln937_1_fu_1090_p2 & p_Result_2_reg_1493_pp0_iter4_reg);

assign and_ln856_2_fu_1156_p2 = (xor_ln937_2_fu_1141_p2 & p_Result_4_reg_1528_pp0_iter4_reg);

assign and_ln856_fu_1054_p2 = (xor_ln937_fu_1039_p2 & p_Result_s_reg_1458_pp0_iter4_reg);

assign and_ln937_1_fu_958_p2 = (p_Result_3_reg_1505 & and_ln937_4_fu_952_p2);

assign and_ln937_2_fu_1029_p2 = (p_Result_5_reg_1540 & and_ln937_5_fu_1023_p2);

assign and_ln937_3_fu_881_p2 = (xor_ln424_fu_855_p2 & Range1_all_ones_fu_837_p2);

assign and_ln937_4_fu_952_p2 = (xor_ln424_1_fu_926_p2 & Range1_all_ones_1_fu_908_p2);

assign and_ln937_5_fu_1023_p2 = (xor_ln424_2_fu_997_p2 & Range1_all_ones_2_fu_979_p2);

assign and_ln937_fu_887_p2 = (p_Result_1_reg_1470 & and_ln937_3_fu_881_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1) | (stream_out_24_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (stream_out_24_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_24_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1) | (stream_out_24_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (stream_out_24_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_24_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter6 == 1'b1) & ((regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1) | (stream_out_24_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (stream_out_24_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_24_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (stream_in_24_TVALID_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = (stream_out_24_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = ((regslice_both_stream_out_24_V_data_V_U_apdone_blk == 1'b1) | (stream_out_24_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign deleted_zeros_1_fu_940_p3 = ((p_Result_3_reg_1505[0:0] == 1'b1) ? select_ln934_1_fu_932_p3 : Range1_all_zeros_1_fu_913_p2);

assign deleted_zeros_2_fu_1011_p3 = ((p_Result_5_reg_1540[0:0] == 1'b1) ? select_ln934_2_fu_1003_p3 : Range1_all_zeros_2_fu_984_p2);

assign deleted_zeros_fu_869_p3 = ((p_Result_1_reg_1470[0:0] == 1'b1) ? select_ln934_fu_861_p3 : Range1_all_zeros_fu_842_p2);

assign or_ln856_1_fu_1110_p2 = (overflow_1_fu_1085_p2 | and_ln856_1_fu_1105_p2);

assign or_ln856_2_fu_1161_p2 = (overflow_2_fu_1136_p2 | and_ln856_2_fu_1156_p2);

assign or_ln856_fu_1059_p2 = (overflow_fu_1034_p2 | and_ln856_fu_1054_p2);

assign or_ln941_1_fu_947_p2 = (p_Result_2_reg_1493 | deleted_zeros_1_fu_940_p3);

assign or_ln941_2_fu_1018_p2 = (p_Result_4_reg_1528 | deleted_zeros_2_fu_1011_p3);

assign or_ln941_fu_876_p2 = (p_Result_s_reg_1458 | deleted_zeros_fu_869_p3);

assign out1_V_fu_1078_p3 = ((or_ln856_fu_1059_p2[0:0] == 1'b1) ? select_ln402_fu_1071_p3 : p_Val2_3_reg_1563);

assign out2_V_fu_1129_p3 = ((or_ln856_1_fu_1110_p2[0:0] == 1'b1) ? select_ln402_1_fu_1122_p3 : p_Val2_6_reg_1586);

assign out3_V_fu_1180_p3 = ((or_ln856_2_fu_1161_p2[0:0] == 1'b1) ? select_ln402_2_fu_1173_p3 : p_Val2_9_reg_1609);

assign overflow_1_fu_1085_p2 = (or_ln941_1_reg_1597 ^ 1'd1);

assign overflow_2_fu_1136_p2 = (or_ln941_2_reg_1620 ^ 1'd1);

assign overflow_fu_1034_p2 = (or_ln941_reg_1574 ^ 1'd1);

assign p_Val2_3_fu_827_p2 = (zext_ln423_fu_821_p1 + p_Val2_2_reg_1465);

assign p_Val2_6_fu_898_p2 = (zext_ln423_2_fu_892_p1 + p_Val2_5_reg_1500);

assign p_Val2_9_fu_969_p2 = (zext_ln423_4_fu_963_p1 + p_Val2_8_reg_1535);

assign r_V_10_fu_385_p1 = zext_ln1319_1_fu_327_p1;

assign r_V_11_fu_491_p1 = zext_ln1319_2_fu_411_p1;

assign r_V_4_fu_333_p1 = zext_ln1319_1_fu_327_p1;

assign r_V_5_fu_417_p1 = zext_ln1319_2_fu_411_p1;

assign r_V_6_fu_346_p1 = zext_ln1319_fu_311_p1;

assign r_V_7_fu_359_p1 = zext_ln1319_1_fu_327_p1;

assign r_V_8_fu_454_p1 = zext_ln1319_2_fu_411_p1;

assign r_V_9_fu_372_p1 = zext_ln1319_fu_311_p1;

assign r_V_fu_317_p1 = zext_ln1319_fu_311_p1;

assign ret_V_1_fu_515_p2 = ($signed(sext_ln859_2_fu_509_p1) + $signed(sext_ln859_3_fu_512_p1));

assign ret_V_2_fu_543_p2 = ($signed(sext_ln1393_fu_528_p1) + $signed(ret_V_1_fu_515_p2));

assign ret_V_3_fu_445_p2 = ($signed(sext_ln859_5_fu_438_p1) + $signed(sext_ln859_4_fu_435_p1));

assign ret_V_4_fu_619_p2 = ($signed(sext_ln859_6_fu_613_p1) + $signed(sext_ln859_7_fu_616_p1));

assign ret_V_5_fu_647_p2 = ($signed(sext_ln1393_1_fu_632_p1) + $signed(ret_V_4_fu_619_p2));

assign ret_V_6_fu_482_p2 = ($signed(sext_ln859_9_fu_475_p1) + $signed(sext_ln859_8_fu_472_p1));

assign ret_V_7_fu_723_p2 = ($signed(sext_ln859_10_fu_717_p1) + $signed(sext_ln859_11_fu_720_p1));

assign ret_V_8_fu_751_p2 = ($signed(sext_ln1393_2_fu_736_p1) + $signed(ret_V_7_fu_723_p2));

assign ret_V_fu_405_p2 = ($signed(sext_ln859_1_fu_398_p1) + $signed(sext_ln859_fu_395_p1));

assign rhs_11_fu_729_p3 = {{rhs_10_reg_1298_pp0_iter2_reg}, {8'd0}};

assign rhs_3_fu_521_p3 = {{rhs_2_reg_1248_pp0_iter2_reg}, {8'd0}};

assign rhs_7_fu_625_p3 = {{rhs_6_reg_1273_pp0_iter2_reg}, {8'd0}};

assign select_ln402_1_fu_1122_p3 = ((or_ln941_1_reg_1597[0:0] == 1'b1) ? select_ln856_1_fu_1116_p3 : 8'd255);

assign select_ln402_2_fu_1173_p3 = ((or_ln941_2_reg_1620[0:0] == 1'b1) ? select_ln856_2_fu_1167_p3 : 8'd255);

assign select_ln402_fu_1071_p3 = ((or_ln941_reg_1574[0:0] == 1'b1) ? select_ln856_fu_1065_p3 : 8'd255);

assign select_ln404_1_fu_1095_p3 = ((and_ln937_1_reg_1603[0:0] == 1'b1) ? add_ln922_1_reg_1592 : 7'd0);

assign select_ln404_2_fu_1146_p3 = ((and_ln937_2_reg_1626[0:0] == 1'b1) ? add_ln922_2_reg_1615 : 7'd0);

assign select_ln404_fu_1044_p3 = ((and_ln937_reg_1580[0:0] == 1'b1) ? add_ln922_reg_1569 : 7'd0);

assign select_ln856_1_fu_1116_p3 = ((p_Result_2_reg_1493_pp0_iter4_reg[0:0] == 1'b1) ? zext_ln856_1_fu_1101_p1 : p_Val2_6_reg_1586);

assign select_ln856_2_fu_1167_p3 = ((p_Result_4_reg_1528_pp0_iter4_reg[0:0] == 1'b1) ? zext_ln856_2_fu_1152_p1 : p_Val2_9_reg_1609);

assign select_ln856_fu_1065_p3 = ((p_Result_s_reg_1458_pp0_iter4_reg[0:0] == 1'b1) ? zext_ln856_fu_1050_p1 : p_Val2_3_reg_1563);

assign select_ln934_1_fu_932_p3 = ((tmp_10_fu_918_p3[0:0] == 1'b1) ? Range1_all_zeros_1_fu_913_p2 : Range1_all_ones_1_fu_908_p2);

assign select_ln934_2_fu_1003_p3 = ((tmp_14_fu_989_p3[0:0] == 1'b1) ? Range1_all_zeros_2_fu_984_p2 : Range1_all_ones_2_fu_979_p2);

assign select_ln934_fu_861_p3 = ((tmp_6_fu_847_p3[0:0] == 1'b1) ? Range1_all_zeros_fu_842_p2 : Range1_all_ones_fu_837_p2);

assign sext_ln1393_1_fu_632_p1 = $signed(rhs_7_fu_625_p3);

assign sext_ln1393_2_fu_736_p1 = $signed(rhs_11_fu_729_p3);

assign sext_ln1393_fu_528_p1 = $signed(rhs_3_fu_521_p3);

assign sext_ln859_10_fu_717_p1 = $signed(ret_V_6_reg_1433);

assign sext_ln859_11_fu_720_p1 = r_V_11_reg_1438;

assign sext_ln859_1_fu_398_p1 = r_V_4_reg_1318;

assign sext_ln859_2_fu_509_p1 = $signed(ret_V_reg_1373);

assign sext_ln859_3_fu_512_p1 = r_V_5_reg_1378;

assign sext_ln859_4_fu_435_p1 = r_V_6_reg_1328;

assign sext_ln859_5_fu_438_p1 = r_V_7_reg_1338;

assign sext_ln859_6_fu_613_p1 = $signed(ret_V_3_reg_1403);

assign sext_ln859_7_fu_616_p1 = r_V_8_reg_1408;

assign sext_ln859_8_fu_472_p1 = r_V_9_reg_1348;

assign sext_ln859_9_fu_475_p1 = r_V_10_reg_1358;

assign sext_ln859_fu_395_p1 = r_V_reg_1308;

assign stream_in_24_TREADY = regslice_both_stream_in_24_V_data_V_U_ack_in;

assign stream_out_24_TDATA_int_regslice = {{{out3_V_fu_1180_p3}, {out2_V_fu_1129_p3}}, {out1_V_fu_1078_p3}};

assign stream_out_24_TVALID = regslice_both_stream_out_24_V_data_V_U_vld_out;

assign tmp_10_fu_918_p3 = p_Val2_6_fu_898_p2[32'd7];

assign tmp_14_fu_989_p3 = p_Val2_9_fu_969_p2[32'd7];

assign tmp_6_fu_847_p3 = p_Val2_3_fu_827_p2[32'd7];

assign trunc_ln1316_1_fu_339_p1 = r_V_4_fu_333_p2[15:0];

assign trunc_ln1316_2_fu_352_p1 = r_V_6_fu_346_p2[15:0];

assign trunc_ln1316_3_fu_365_p1 = r_V_7_fu_359_p2[15:0];

assign trunc_ln1316_4_fu_378_p1 = r_V_9_fu_372_p2[15:0];

assign trunc_ln1316_5_fu_391_p1 = r_V_10_fu_385_p2[15:0];

assign trunc_ln1316_fu_323_p1 = r_V_fu_317_p2[15:0];

assign trunc_ln1393_10_fu_497_p1 = r_V_11_fu_491_p2[7:0];

assign trunc_ln1393_11_fu_501_p1 = add_ln1393_17_fu_478_p2[7:0];

assign trunc_ln1393_12_fu_505_p1 = r_V_11_fu_491_p2[15:0];

assign trunc_ln1393_14_fu_307_p1 = bias_c3[7:0];

assign trunc_ln1393_1_fu_427_p1 = add_ln1393_1_fu_401_p2[7:0];

assign trunc_ln1393_2_fu_431_p1 = r_V_5_fu_417_p2[15:0];

assign trunc_ln1393_3_fu_299_p1 = bias_c1[7:0];

assign trunc_ln1393_4_fu_536_p3 = {{trunc_ln1393_3_reg_1253_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1393_5_fu_460_p1 = r_V_8_fu_454_p2[7:0];

assign trunc_ln1393_6_fu_464_p1 = add_ln1393_10_fu_441_p2[7:0];

assign trunc_ln1393_7_fu_468_p1 = r_V_8_fu_454_p2[15:0];

assign trunc_ln1393_8_fu_303_p1 = bias_c2[7:0];

assign trunc_ln1393_9_fu_640_p3 = {{trunc_ln1393_8_reg_1278_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1393_fu_423_p1 = r_V_5_fu_417_p2[7:0];

assign trunc_ln1393_s_fu_744_p3 = {{trunc_ln1393_14_reg_1303_pp0_iter2_reg}, {8'd0}};

assign v_p1_V_fu_275_p1 = stream_in_24_TDATA_int_regslice[7:0];

assign xor_ln424_1_fu_926_p2 = (tmp_10_fu_918_p3 ^ 1'd1);

assign xor_ln424_2_fu_997_p2 = (tmp_14_fu_989_p3 ^ 1'd1);

assign xor_ln424_fu_855_p2 = (tmp_6_fu_847_p3 ^ 1'd1);

assign xor_ln937_1_fu_1090_p2 = (1'd1 ^ and_ln937_1_reg_1603);

assign xor_ln937_2_fu_1141_p2 = (1'd1 ^ and_ln937_2_reg_1626);

assign xor_ln937_fu_1039_p2 = (1'd1 ^ and_ln937_reg_1580);

assign zext_ln1319_1_fu_327_p1 = v_p2_V_reg_1223;

assign zext_ln1319_2_fu_411_p1 = v_p3_V_reg_1228_pp0_iter1_reg;

assign zext_ln1319_fu_311_p1 = v_p1_V_reg_1218;

assign zext_ln423_1_fu_824_p1 = tmp_5_reg_1476;

assign zext_ln423_2_fu_892_p1 = tmp_9_reg_1511;

assign zext_ln423_3_fu_895_p1 = tmp_9_reg_1511;

assign zext_ln423_4_fu_963_p1 = tmp_13_reg_1546;

assign zext_ln423_5_fu_966_p1 = tmp_13_reg_1546;

assign zext_ln423_fu_821_p1 = tmp_5_reg_1476;

assign zext_ln856_1_fu_1101_p1 = select_ln404_1_fu_1095_p3;

assign zext_ln856_2_fu_1152_p1 = select_ln404_2_fu_1146_p3;

assign zext_ln856_fu_1050_p1 = select_ln404_fu_1044_p3;

endmodule //color_convert
