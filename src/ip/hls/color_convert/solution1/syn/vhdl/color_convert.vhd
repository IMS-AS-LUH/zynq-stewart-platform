-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_convert is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_24_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_24_TVALID : IN STD_LOGIC;
    stream_in_24_TREADY : OUT STD_LOGIC;
    stream_in_24_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_24_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_24_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_24_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_24_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_24_TVALID : OUT STD_LOGIC;
    stream_out_24_TREADY : IN STD_LOGIC;
    stream_out_24_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_24_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_24_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_24_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of color_convert is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "color_convert_color_convert,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.520000,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1662,HLS_SYN_LUT=1893,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal c1_c1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_c3 : STD_LOGIC_VECTOR (9 downto 0);
    signal stream_in_24_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_24_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_keep_V_reg_1198 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal regslice_both_stream_out_24_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_keep_V_reg_1198_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_keep_V_reg_1198_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_keep_V_reg_1198_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_keep_V_reg_1198_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_strb_V_reg_1203 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_strb_V_reg_1203_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_strb_V_reg_1203_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_strb_V_reg_1203_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_strb_V_reg_1203_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_user_V_reg_1208 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_1208_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_1208_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_1208_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_1208_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1213 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1213_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1213_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1213_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_1213_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v_p1_V_fu_275_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p1_V_reg_1218 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p2_V_reg_1223 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p3_V_reg_1228 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_p3_V_reg_1228_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal c1_c1_read_reg_1233 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c2_read_reg_1238 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c3_read_reg_1243 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_c3_read_reg_1243_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_2_reg_1248 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_2_reg_1248_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_2_reg_1248_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1393_3_fu_299_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_3_reg_1253 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_3_reg_1253_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_3_reg_1253_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal c2_c1_read_reg_1258 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c2_read_reg_1263 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c3_read_reg_1268 : STD_LOGIC_VECTOR (9 downto 0);
    signal c2_c3_read_reg_1268_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_6_reg_1273 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_6_reg_1273_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_6_reg_1273_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1393_8_fu_303_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_8_reg_1278 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_8_reg_1278_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_8_reg_1278_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal c3_c1_read_reg_1283 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c2_read_reg_1288 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c3_read_reg_1293 : STD_LOGIC_VECTOR (9 downto 0);
    signal c3_c3_read_reg_1293_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_10_reg_1298 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_10_reg_1298_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_10_reg_1298_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1393_14_fu_307_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_14_reg_1303 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_14_reg_1303_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_14_reg_1303_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_317_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_reg_1308 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_fu_323_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_reg_1313 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_fu_333_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_reg_1318 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_1_fu_339_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_1_reg_1323 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_346_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_6_reg_1328 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_2_fu_352_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_2_reg_1333 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_359_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_7_reg_1338 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_3_fu_365_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_3_reg_1343 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_9_fu_372_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_9_reg_1348 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_4_fu_378_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_4_reg_1353 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_10_fu_385_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_10_reg_1358 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1316_5_fu_391_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1316_5_reg_1363 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_1_fu_401_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_1_reg_1368 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_405_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_reg_1373 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_5_fu_417_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_5_reg_1378 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1393_fu_423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_reg_1383 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_1_fu_427_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_1_reg_1388 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_2_fu_431_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1393_2_reg_1393 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_10_fu_441_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_10_reg_1398 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_3_fu_445_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_3_reg_1403 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_8_fu_454_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_8_reg_1408 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1393_5_fu_460_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_5_reg_1413 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_6_fu_464_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_6_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_7_fu_468_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1393_7_reg_1423 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_17_fu_478_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_17_reg_1428 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_6_fu_482_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_6_reg_1433 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_fu_491_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_11_reg_1438 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1393_10_fu_497_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_10_reg_1443 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_11_fu_501_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_11_reg_1448 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1393_12_fu_505_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1393_12_reg_1453 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1458_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_reg_1465 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_reg_1470 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln423_3_reg_1482 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_1487 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_2_reg_1493 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_1493_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_reg_1500 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_reg_1505 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1511 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln423_4_reg_1517 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_1522 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_4_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_reg_1528_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_reg_1535 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_reg_1540 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1546 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln423_5_reg_1552 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_reg_1557 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_3_fu_827_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_reg_1563 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln922_fu_832_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln922_reg_1569 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln941_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln941_reg_1574 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_898_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_1586 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln922_1_fu_903_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln922_1_reg_1592 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln941_1_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln941_1_reg_1597 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_1_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_1_reg_1603 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_969_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1609 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln922_2_fu_974_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln922_2_reg_1615 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln941_2_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln941_2_reg_1620 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_2_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_2_reg_1626 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_fu_317_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1319_fu_311_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_fu_333_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1319_1_fu_327_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_6_fu_346_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_359_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_fu_372_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_fu_385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln859_1_fu_398_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_fu_395_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_5_fu_417_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1319_2_fu_411_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln859_5_fu_438_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_4_fu_435_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_8_fu_454_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln859_9_fu_475_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln859_8_fu_472_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_11_fu_491_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln859_2_fu_509_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln859_3_fu_512_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_3_fu_521_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_fu_528_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_1_fu_515_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1393_4_fu_536_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_fu_532_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_2_fu_543_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1393_3_fu_553_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_2_fu_549_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln859_6_fu_613_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln859_7_fu_616_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_7_fu_625_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_1_fu_632_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_4_fu_619_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1393_9_fu_640_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_6_fu_636_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_5_fu_647_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1393_9_fu_657_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_8_fu_653_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln859_10_fu_717_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln859_11_fu_720_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_11_fu_729_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1393_2_fu_736_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_7_fu_723_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1393_s_fu_744_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_12_fu_740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_8_fu_751_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1393_15_fu_761_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1393_14_fu_757_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln423_fu_821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln423_1_fu_824_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_847_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln934_fu_861_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln424_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_3_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln423_2_fu_892_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln423_3_fu_895_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_10_fu_918_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln934_1_fu_932_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln424_1_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_4_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln423_4_fu_963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln423_5_fu_966_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_989_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln934_2_fu_1003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_1011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln424_2_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln937_5_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln404_fu_1044_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln937_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln856_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln856_fu_1050_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln856_fu_1065_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln856_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln402_fu_1071_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln404_1_fu_1095_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln937_1_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln856_1_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln856_1_fu_1101_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln856_1_fu_1116_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln856_1_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln402_1_fu_1122_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln404_2_fu_1146_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln937_2_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln856_2_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln856_2_fu_1152_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln856_2_fu_1167_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln856_2_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln402_2_fu_1173_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out3_V_fu_1180_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out2_V_fu_1129_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out1_V_fu_1078_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_stream_in_24_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_24_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_24_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_24_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_stream_in_24_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_stream_in_24_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_user_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_24_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_24_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_24_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_24_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_24_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_24_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_24_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_24_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_24_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_24_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component color_convert_mul_10s_8ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component color_convert_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        c1_c1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_c2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c1_c3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c2_c3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        c3_c3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c2 : OUT STD_LOGIC_VECTOR (9 downto 0);
        bias_c3 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component color_convert_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component color_convert_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        c1_c1 => c1_c1,
        c1_c2 => c1_c2,
        c1_c3 => c1_c3,
        c2_c1 => c2_c1,
        c2_c2 => c2_c2,
        c2_c3 => c2_c3,
        c3_c1 => c3_c1,
        c3_c2 => c3_c2,
        c3_c3 => c3_c3,
        bias_c1 => bias_c1,
        bias_c2 => bias_c2,
        bias_c3 => bias_c3);

    mul_10s_8ns_18_1_1_U1 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_c1_read_reg_1233,
        din1 => r_V_fu_317_p1,
        dout => r_V_fu_317_p2);

    mul_10s_8ns_18_1_1_U2 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_c2_read_reg_1238,
        din1 => r_V_4_fu_333_p1,
        dout => r_V_4_fu_333_p2);

    mul_10s_8ns_18_1_1_U3 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_c1_read_reg_1258,
        din1 => r_V_6_fu_346_p1,
        dout => r_V_6_fu_346_p2);

    mul_10s_8ns_18_1_1_U4 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_c2_read_reg_1263,
        din1 => r_V_7_fu_359_p1,
        dout => r_V_7_fu_359_p2);

    mul_10s_8ns_18_1_1_U5 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_c1_read_reg_1283,
        din1 => r_V_9_fu_372_p1,
        dout => r_V_9_fu_372_p2);

    mul_10s_8ns_18_1_1_U6 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_c2_read_reg_1288,
        din1 => r_V_10_fu_385_p1,
        dout => r_V_10_fu_385_p2);

    mul_10s_8ns_18_1_1_U7 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c1_c3_read_reg_1243_pp0_iter1_reg,
        din1 => r_V_5_fu_417_p1,
        dout => r_V_5_fu_417_p2);

    mul_10s_8ns_18_1_1_U8 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c2_c3_read_reg_1268_pp0_iter1_reg,
        din1 => r_V_8_fu_454_p1,
        dout => r_V_8_fu_454_p2);

    mul_10s_8ns_18_1_1_U9 : component color_convert_mul_10s_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => c3_c3_read_reg_1293_pp0_iter1_reg,
        din1 => r_V_11_fu_491_p1,
        dout => r_V_11_fu_491_p2);

    regslice_both_stream_in_24_V_data_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TDATA,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_data_V_U_ack_in,
        data_out => stream_in_24_TDATA_int_regslice,
        vld_out => stream_in_24_TVALID_int_regslice,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_data_V_U_apdone_blk);

    regslice_both_stream_in_24_V_keep_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TKEEP,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_keep_V_U_ack_in,
        data_out => stream_in_24_TKEEP_int_regslice,
        vld_out => regslice_both_stream_in_24_V_keep_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_keep_V_U_apdone_blk);

    regslice_both_stream_in_24_V_strb_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TSTRB,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_strb_V_U_ack_in,
        data_out => stream_in_24_TSTRB_int_regslice,
        vld_out => regslice_both_stream_in_24_V_strb_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_strb_V_U_apdone_blk);

    regslice_both_stream_in_24_V_user_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TUSER,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_user_V_U_ack_in,
        data_out => stream_in_24_TUSER_int_regslice,
        vld_out => regslice_both_stream_in_24_V_user_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_user_V_U_apdone_blk);

    regslice_both_stream_in_24_V_last_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_24_TLAST,
        vld_in => stream_in_24_TVALID,
        ack_in => regslice_both_stream_in_24_V_last_V_U_ack_in,
        data_out => stream_in_24_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_24_V_last_V_U_vld_out,
        ack_out => stream_in_24_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_24_V_last_V_U_apdone_blk);

    regslice_both_stream_out_24_V_data_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_out_24_TDATA_int_regslice,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => stream_out_24_TREADY_int_regslice,
        data_out => stream_out_24_TDATA,
        vld_out => regslice_both_stream_out_24_V_data_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_data_V_U_apdone_blk);

    regslice_both_stream_out_24_V_keep_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_keep_V_reg_1198_pp0_iter4_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_keep_V_U_ack_in_dummy,
        data_out => stream_out_24_TKEEP,
        vld_out => regslice_both_stream_out_24_V_keep_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_keep_V_U_apdone_blk);

    regslice_both_stream_out_24_V_strb_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_strb_V_reg_1203_pp0_iter4_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_strb_V_U_ack_in_dummy,
        data_out => stream_out_24_TSTRB,
        vld_out => regslice_both_stream_out_24_V_strb_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_strb_V_U_apdone_blk);

    regslice_both_stream_out_24_V_user_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_user_V_reg_1208_pp0_iter4_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_user_V_U_ack_in_dummy,
        data_out => stream_out_24_TUSER,
        vld_out => regslice_both_stream_out_24_V_user_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_user_V_U_apdone_blk);

    regslice_both_stream_out_24_V_last_V_U : component color_convert_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => tmp_last_V_reg_1213_pp0_iter4_reg,
        vld_in => stream_out_24_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_24_V_last_V_U_ack_in_dummy,
        data_out => stream_out_24_TLAST,
        vld_out => regslice_both_stream_out_24_V_last_V_U_vld_out,
        ack_out => stream_out_24_TREADY,
        apdone_blk => regslice_both_stream_out_24_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1393_10_reg_1398 <= add_ln1393_10_fu_441_p2;
                add_ln1393_17_reg_1428 <= add_ln1393_17_fu_478_p2;
                add_ln1393_1_reg_1368 <= add_ln1393_1_fu_401_p2;
                and_ln937_1_reg_1603 <= and_ln937_1_fu_958_p2;
                and_ln937_2_reg_1626 <= and_ln937_2_fu_1029_p2;
                and_ln937_reg_1580 <= and_ln937_fu_887_p2;
                or_ln941_1_reg_1597 <= or_ln941_1_fu_947_p2;
                or_ln941_2_reg_1620 <= or_ln941_2_fu_1018_p2;
                or_ln941_reg_1574 <= or_ln941_fu_876_p2;
                p_Result_1_reg_1470 <= add_ln1393_3_fu_553_p2(15 downto 15);
                p_Result_2_reg_1493 <= ret_V_5_fu_647_p2(19 downto 19);
                p_Result_2_reg_1493_pp0_iter4_reg <= p_Result_2_reg_1493;
                p_Result_3_reg_1505 <= add_ln1393_9_fu_657_p2(15 downto 15);
                p_Result_4_reg_1528 <= ret_V_8_fu_751_p2(19 downto 19);
                p_Result_4_reg_1528_pp0_iter4_reg <= p_Result_4_reg_1528;
                p_Result_5_reg_1540 <= add_ln1393_15_fu_761_p2(15 downto 15);
                p_Result_s_reg_1458 <= ret_V_2_fu_543_p2(19 downto 19);
                p_Result_s_reg_1458_pp0_iter4_reg <= p_Result_s_reg_1458;
                p_Val2_2_reg_1465 <= add_ln1393_3_fu_553_p2(15 downto 8);
                p_Val2_3_reg_1563 <= p_Val2_3_fu_827_p2;
                p_Val2_5_reg_1500 <= add_ln1393_9_fu_657_p2(15 downto 8);
                p_Val2_6_reg_1586 <= p_Val2_6_fu_898_p2;
                p_Val2_8_reg_1535 <= add_ln1393_15_fu_761_p2(15 downto 8);
                p_Val2_9_reg_1609 <= p_Val2_9_fu_969_p2;
                r_V_11_reg_1438 <= r_V_11_fu_491_p2;
                r_V_5_reg_1378 <= r_V_5_fu_417_p2;
                r_V_8_reg_1408 <= r_V_8_fu_454_p2;
                ret_V_3_reg_1403 <= ret_V_3_fu_445_p2;
                ret_V_6_reg_1433 <= ret_V_6_fu_482_p2;
                ret_V_reg_1373 <= ret_V_fu_405_p2;
                rhs_10_reg_1298_pp0_iter2_reg <= rhs_10_reg_1298_pp0_iter1_reg;
                rhs_2_reg_1248_pp0_iter2_reg <= rhs_2_reg_1248_pp0_iter1_reg;
                rhs_6_reg_1273_pp0_iter2_reg <= rhs_6_reg_1273_pp0_iter1_reg;
                tmp_13_reg_1546 <= add_ln1393_14_fu_757_p2(7 downto 7);
                tmp_1_reg_1522 <= ret_V_5_fu_647_p2(19 downto 16);
                tmp_2_reg_1557 <= ret_V_8_fu_751_p2(19 downto 16);
                tmp_5_reg_1476 <= add_ln1393_2_fu_549_p2(7 downto 7);
                tmp_9_reg_1511 <= add_ln1393_8_fu_653_p2(7 downto 7);
                tmp_keep_V_reg_1198_pp0_iter2_reg <= tmp_keep_V_reg_1198_pp0_iter1_reg;
                tmp_keep_V_reg_1198_pp0_iter3_reg <= tmp_keep_V_reg_1198_pp0_iter2_reg;
                tmp_keep_V_reg_1198_pp0_iter4_reg <= tmp_keep_V_reg_1198_pp0_iter3_reg;
                tmp_last_V_reg_1213_pp0_iter2_reg <= tmp_last_V_reg_1213_pp0_iter1_reg;
                tmp_last_V_reg_1213_pp0_iter3_reg <= tmp_last_V_reg_1213_pp0_iter2_reg;
                tmp_last_V_reg_1213_pp0_iter4_reg <= tmp_last_V_reg_1213_pp0_iter3_reg;
                tmp_reg_1487 <= ret_V_2_fu_543_p2(19 downto 16);
                tmp_strb_V_reg_1203_pp0_iter2_reg <= tmp_strb_V_reg_1203_pp0_iter1_reg;
                tmp_strb_V_reg_1203_pp0_iter3_reg <= tmp_strb_V_reg_1203_pp0_iter2_reg;
                tmp_strb_V_reg_1203_pp0_iter4_reg <= tmp_strb_V_reg_1203_pp0_iter3_reg;
                tmp_user_V_reg_1208_pp0_iter2_reg <= tmp_user_V_reg_1208_pp0_iter1_reg;
                tmp_user_V_reg_1208_pp0_iter3_reg <= tmp_user_V_reg_1208_pp0_iter2_reg;
                tmp_user_V_reg_1208_pp0_iter4_reg <= tmp_user_V_reg_1208_pp0_iter3_reg;
                trunc_ln1393_10_reg_1443 <= trunc_ln1393_10_fu_497_p1;
                trunc_ln1393_11_reg_1448 <= trunc_ln1393_11_fu_501_p1;
                trunc_ln1393_12_reg_1453 <= trunc_ln1393_12_fu_505_p1;
                trunc_ln1393_14_reg_1303_pp0_iter2_reg <= trunc_ln1393_14_reg_1303_pp0_iter1_reg;
                trunc_ln1393_1_reg_1388 <= trunc_ln1393_1_fu_427_p1;
                trunc_ln1393_2_reg_1393 <= trunc_ln1393_2_fu_431_p1;
                trunc_ln1393_3_reg_1253_pp0_iter2_reg <= trunc_ln1393_3_reg_1253_pp0_iter1_reg;
                trunc_ln1393_5_reg_1413 <= trunc_ln1393_5_fu_460_p1;
                trunc_ln1393_6_reg_1418 <= trunc_ln1393_6_fu_464_p1;
                trunc_ln1393_7_reg_1423 <= trunc_ln1393_7_fu_468_p1;
                trunc_ln1393_8_reg_1278_pp0_iter2_reg <= trunc_ln1393_8_reg_1278_pp0_iter1_reg;
                trunc_ln1393_reg_1383 <= trunc_ln1393_fu_423_p1;
                trunc_ln423_3_reg_1482 <= add_ln1393_3_fu_553_p2(14 downto 8);
                trunc_ln423_4_reg_1517 <= add_ln1393_9_fu_657_p2(14 downto 8);
                trunc_ln423_5_reg_1552 <= add_ln1393_15_fu_761_p2(14 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_Result_2_reg_1493 = ap_const_lv1_1))) then
                add_ln922_1_reg_1592 <= add_ln922_1_fu_903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_Result_4_reg_1528 = ap_const_lv1_1))) then
                add_ln922_2_reg_1615 <= add_ln922_2_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_Result_s_reg_1458 = ap_const_lv1_1))) then
                add_ln922_reg_1569 <= add_ln922_fu_832_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c1_c1_read_reg_1233 <= c1_c1;
                c1_c2_read_reg_1238 <= c1_c2;
                c1_c3_read_reg_1243 <= c1_c3;
                c1_c3_read_reg_1243_pp0_iter1_reg <= c1_c3_read_reg_1243;
                c2_c1_read_reg_1258 <= c2_c1;
                c2_c2_read_reg_1263 <= c2_c2;
                c2_c3_read_reg_1268 <= c2_c3;
                c2_c3_read_reg_1268_pp0_iter1_reg <= c2_c3_read_reg_1268;
                c3_c1_read_reg_1283 <= c3_c1;
                c3_c2_read_reg_1288 <= c3_c2;
                c3_c3_read_reg_1293 <= c3_c3;
                c3_c3_read_reg_1293_pp0_iter1_reg <= c3_c3_read_reg_1293;
                r_V_10_reg_1358 <= r_V_10_fu_385_p2;
                r_V_4_reg_1318 <= r_V_4_fu_333_p2;
                r_V_6_reg_1328 <= r_V_6_fu_346_p2;
                r_V_7_reg_1338 <= r_V_7_fu_359_p2;
                r_V_9_reg_1348 <= r_V_9_fu_372_p2;
                r_V_reg_1308 <= r_V_fu_317_p2;
                rhs_10_reg_1298 <= bias_c3;
                rhs_10_reg_1298_pp0_iter1_reg <= rhs_10_reg_1298;
                rhs_2_reg_1248 <= bias_c1;
                rhs_2_reg_1248_pp0_iter1_reg <= rhs_2_reg_1248;
                rhs_6_reg_1273 <= bias_c2;
                rhs_6_reg_1273_pp0_iter1_reg <= rhs_6_reg_1273;
                tmp_keep_V_reg_1198 <= stream_in_24_TKEEP_int_regslice;
                tmp_keep_V_reg_1198_pp0_iter1_reg <= tmp_keep_V_reg_1198;
                tmp_last_V_reg_1213 <= stream_in_24_TLAST_int_regslice;
                tmp_last_V_reg_1213_pp0_iter1_reg <= tmp_last_V_reg_1213;
                tmp_strb_V_reg_1203 <= stream_in_24_TSTRB_int_regslice;
                tmp_strb_V_reg_1203_pp0_iter1_reg <= tmp_strb_V_reg_1203;
                tmp_user_V_reg_1208 <= stream_in_24_TUSER_int_regslice;
                tmp_user_V_reg_1208_pp0_iter1_reg <= tmp_user_V_reg_1208;
                trunc_ln1316_1_reg_1323 <= trunc_ln1316_1_fu_339_p1;
                trunc_ln1316_2_reg_1333 <= trunc_ln1316_2_fu_352_p1;
                trunc_ln1316_3_reg_1343 <= trunc_ln1316_3_fu_365_p1;
                trunc_ln1316_4_reg_1353 <= trunc_ln1316_4_fu_378_p1;
                trunc_ln1316_5_reg_1363 <= trunc_ln1316_5_fu_391_p1;
                trunc_ln1316_reg_1313 <= trunc_ln1316_fu_323_p1;
                trunc_ln1393_14_reg_1303 <= trunc_ln1393_14_fu_307_p1;
                trunc_ln1393_14_reg_1303_pp0_iter1_reg <= trunc_ln1393_14_reg_1303;
                trunc_ln1393_3_reg_1253 <= trunc_ln1393_3_fu_299_p1;
                trunc_ln1393_3_reg_1253_pp0_iter1_reg <= trunc_ln1393_3_reg_1253;
                trunc_ln1393_8_reg_1278 <= trunc_ln1393_8_fu_303_p1;
                trunc_ln1393_8_reg_1278_pp0_iter1_reg <= trunc_ln1393_8_reg_1278;
                v_p1_V_reg_1218 <= v_p1_V_fu_275_p1;
                v_p2_V_reg_1223 <= stream_in_24_TDATA_int_regslice(15 downto 8);
                v_p3_V_reg_1228 <= stream_in_24_TDATA_int_regslice(23 downto 16);
                v_p3_V_reg_1228_pp0_iter1_reg <= v_p3_V_reg_1228;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Range1_all_ones_1_fu_908_p2 <= "1" when (tmp_1_reg_1522 = ap_const_lv4_F) else "0";
    Range1_all_ones_2_fu_979_p2 <= "1" when (tmp_2_reg_1557 = ap_const_lv4_F) else "0";
    Range1_all_ones_fu_837_p2 <= "1" when (tmp_reg_1487 = ap_const_lv4_F) else "0";
    Range1_all_zeros_1_fu_913_p2 <= "1" when (tmp_1_reg_1522 = ap_const_lv4_0) else "0";
    Range1_all_zeros_2_fu_984_p2 <= "1" when (tmp_2_reg_1557 = ap_const_lv4_0) else "0";
    Range1_all_zeros_fu_842_p2 <= "1" when (tmp_reg_1487 = ap_const_lv4_0) else "0";
    add_ln1393_10_fu_441_p2 <= std_logic_vector(unsigned(trunc_ln1316_3_reg_1343) + unsigned(trunc_ln1316_2_reg_1333));
    add_ln1393_12_fu_740_p2 <= std_logic_vector(unsigned(add_ln1393_17_reg_1428) + unsigned(trunc_ln1393_12_reg_1453));
    add_ln1393_14_fu_757_p2 <= std_logic_vector(unsigned(trunc_ln1393_11_reg_1448) + unsigned(trunc_ln1393_10_reg_1443));
    add_ln1393_15_fu_761_p2 <= std_logic_vector(unsigned(trunc_ln1393_s_fu_744_p3) + unsigned(add_ln1393_12_fu_740_p2));
    add_ln1393_17_fu_478_p2 <= std_logic_vector(unsigned(trunc_ln1316_5_reg_1363) + unsigned(trunc_ln1316_4_reg_1353));
    add_ln1393_1_fu_401_p2 <= std_logic_vector(unsigned(trunc_ln1316_1_reg_1323) + unsigned(trunc_ln1316_reg_1313));
    add_ln1393_2_fu_549_p2 <= std_logic_vector(unsigned(trunc_ln1393_1_reg_1388) + unsigned(trunc_ln1393_reg_1383));
    add_ln1393_3_fu_553_p2 <= std_logic_vector(unsigned(trunc_ln1393_4_fu_536_p3) + unsigned(add_ln1393_fu_532_p2));
    add_ln1393_6_fu_636_p2 <= std_logic_vector(unsigned(add_ln1393_10_reg_1398) + unsigned(trunc_ln1393_7_reg_1423));
    add_ln1393_8_fu_653_p2 <= std_logic_vector(unsigned(trunc_ln1393_6_reg_1418) + unsigned(trunc_ln1393_5_reg_1413));
    add_ln1393_9_fu_657_p2 <= std_logic_vector(unsigned(trunc_ln1393_9_fu_640_p3) + unsigned(add_ln1393_6_fu_636_p2));
    add_ln1393_fu_532_p2 <= std_logic_vector(unsigned(add_ln1393_1_reg_1368) + unsigned(trunc_ln1393_2_reg_1393));
    add_ln922_1_fu_903_p2 <= std_logic_vector(unsigned(zext_ln423_3_fu_895_p1) + unsigned(trunc_ln423_4_reg_1517));
    add_ln922_2_fu_974_p2 <= std_logic_vector(unsigned(zext_ln423_5_fu_966_p1) + unsigned(trunc_ln423_5_reg_1552));
    add_ln922_fu_832_p2 <= std_logic_vector(unsigned(zext_ln423_1_fu_824_p1) + unsigned(trunc_ln423_3_reg_1482));
    and_ln856_1_fu_1105_p2 <= (xor_ln937_1_fu_1090_p2 and p_Result_2_reg_1493_pp0_iter4_reg);
    and_ln856_2_fu_1156_p2 <= (xor_ln937_2_fu_1141_p2 and p_Result_4_reg_1528_pp0_iter4_reg);
    and_ln856_fu_1054_p2 <= (xor_ln937_fu_1039_p2 and p_Result_s_reg_1458_pp0_iter4_reg);
    and_ln937_1_fu_958_p2 <= (p_Result_3_reg_1505 and and_ln937_4_fu_952_p2);
    and_ln937_2_fu_1029_p2 <= (p_Result_5_reg_1540 and and_ln937_5_fu_1023_p2);
    and_ln937_3_fu_881_p2 <= (xor_ln424_fu_855_p2 and Range1_all_ones_fu_837_p2);
    and_ln937_4_fu_952_p2 <= (xor_ln424_1_fu_926_p2 and Range1_all_ones_1_fu_908_p2);
    and_ln937_5_fu_1023_p2 <= (xor_ln424_2_fu_997_p2 and Range1_all_ones_2_fu_979_p2);
    and_ln937_fu_887_p2 <= (p_Result_1_reg_1470 and and_ln937_3_fu_881_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_24_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (stream_out_24_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_const_logic_1) and (stream_in_24_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_24_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (stream_out_24_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_const_logic_1) and (stream_in_24_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_in_24_TVALID_int_regslice, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_24_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (stream_out_24_TREADY_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_const_logic_1) and (stream_in_24_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_24_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (stream_in_24_TVALID_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(stream_out_24_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage0_iter5 <= (stream_out_24_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state7_pp0_stage0_iter6_assign_proc : process(regslice_both_stream_out_24_V_data_V_U_apdone_blk, stream_out_24_TREADY_int_regslice)
    begin
                ap_block_state7_pp0_stage0_iter6 <= ((regslice_both_stream_out_24_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_24_TREADY_int_regslice = ap_const_logic_0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    deleted_zeros_1_fu_940_p3 <= 
        select_ln934_1_fu_932_p3 when (p_Result_3_reg_1505(0) = '1') else 
        Range1_all_zeros_1_fu_913_p2;
    deleted_zeros_2_fu_1011_p3 <= 
        select_ln934_2_fu_1003_p3 when (p_Result_5_reg_1540(0) = '1') else 
        Range1_all_zeros_2_fu_984_p2;
    deleted_zeros_fu_869_p3 <= 
        select_ln934_fu_861_p3 when (p_Result_1_reg_1470(0) = '1') else 
        Range1_all_zeros_fu_842_p2;
    or_ln856_1_fu_1110_p2 <= (overflow_1_fu_1085_p2 or and_ln856_1_fu_1105_p2);
    or_ln856_2_fu_1161_p2 <= (overflow_2_fu_1136_p2 or and_ln856_2_fu_1156_p2);
    or_ln856_fu_1059_p2 <= (overflow_fu_1034_p2 or and_ln856_fu_1054_p2);
    or_ln941_1_fu_947_p2 <= (p_Result_2_reg_1493 or deleted_zeros_1_fu_940_p3);
    or_ln941_2_fu_1018_p2 <= (p_Result_4_reg_1528 or deleted_zeros_2_fu_1011_p3);
    or_ln941_fu_876_p2 <= (p_Result_s_reg_1458 or deleted_zeros_fu_869_p3);
    out1_V_fu_1078_p3 <= 
        select_ln402_fu_1071_p3 when (or_ln856_fu_1059_p2(0) = '1') else 
        p_Val2_3_reg_1563;
    out2_V_fu_1129_p3 <= 
        select_ln402_1_fu_1122_p3 when (or_ln856_1_fu_1110_p2(0) = '1') else 
        p_Val2_6_reg_1586;
    out3_V_fu_1180_p3 <= 
        select_ln402_2_fu_1173_p3 when (or_ln856_2_fu_1161_p2(0) = '1') else 
        p_Val2_9_reg_1609;
    overflow_1_fu_1085_p2 <= (or_ln941_1_reg_1597 xor ap_const_lv1_1);
    overflow_2_fu_1136_p2 <= (or_ln941_2_reg_1620 xor ap_const_lv1_1);
    overflow_fu_1034_p2 <= (or_ln941_reg_1574 xor ap_const_lv1_1);
    p_Val2_3_fu_827_p2 <= std_logic_vector(unsigned(zext_ln423_fu_821_p1) + unsigned(p_Val2_2_reg_1465));
    p_Val2_6_fu_898_p2 <= std_logic_vector(unsigned(zext_ln423_2_fu_892_p1) + unsigned(p_Val2_5_reg_1500));
    p_Val2_9_fu_969_p2 <= std_logic_vector(unsigned(zext_ln423_4_fu_963_p1) + unsigned(p_Val2_8_reg_1535));
    r_V_10_fu_385_p1 <= zext_ln1319_1_fu_327_p1(8 - 1 downto 0);
    r_V_11_fu_491_p1 <= zext_ln1319_2_fu_411_p1(8 - 1 downto 0);
    r_V_4_fu_333_p1 <= zext_ln1319_1_fu_327_p1(8 - 1 downto 0);
    r_V_5_fu_417_p1 <= zext_ln1319_2_fu_411_p1(8 - 1 downto 0);
    r_V_6_fu_346_p1 <= zext_ln1319_fu_311_p1(8 - 1 downto 0);
    r_V_7_fu_359_p1 <= zext_ln1319_1_fu_327_p1(8 - 1 downto 0);
    r_V_8_fu_454_p1 <= zext_ln1319_2_fu_411_p1(8 - 1 downto 0);
    r_V_9_fu_372_p1 <= zext_ln1319_fu_311_p1(8 - 1 downto 0);
    r_V_fu_317_p1 <= zext_ln1319_fu_311_p1(8 - 1 downto 0);
    ret_V_1_fu_515_p2 <= std_logic_vector(signed(sext_ln859_2_fu_509_p1) + signed(sext_ln859_3_fu_512_p1));
    ret_V_2_fu_543_p2 <= std_logic_vector(signed(sext_ln1393_fu_528_p1) + signed(ret_V_1_fu_515_p2));
    ret_V_3_fu_445_p2 <= std_logic_vector(signed(sext_ln859_5_fu_438_p1) + signed(sext_ln859_4_fu_435_p1));
    ret_V_4_fu_619_p2 <= std_logic_vector(signed(sext_ln859_6_fu_613_p1) + signed(sext_ln859_7_fu_616_p1));
    ret_V_5_fu_647_p2 <= std_logic_vector(signed(sext_ln1393_1_fu_632_p1) + signed(ret_V_4_fu_619_p2));
    ret_V_6_fu_482_p2 <= std_logic_vector(signed(sext_ln859_9_fu_475_p1) + signed(sext_ln859_8_fu_472_p1));
    ret_V_7_fu_723_p2 <= std_logic_vector(signed(sext_ln859_10_fu_717_p1) + signed(sext_ln859_11_fu_720_p1));
    ret_V_8_fu_751_p2 <= std_logic_vector(signed(sext_ln1393_2_fu_736_p1) + signed(ret_V_7_fu_723_p2));
    ret_V_fu_405_p2 <= std_logic_vector(signed(sext_ln859_1_fu_398_p1) + signed(sext_ln859_fu_395_p1));
    rhs_11_fu_729_p3 <= (rhs_10_reg_1298_pp0_iter2_reg & ap_const_lv8_0);
    rhs_3_fu_521_p3 <= (rhs_2_reg_1248_pp0_iter2_reg & ap_const_lv8_0);
    rhs_7_fu_625_p3 <= (rhs_6_reg_1273_pp0_iter2_reg & ap_const_lv8_0);
    select_ln402_1_fu_1122_p3 <= 
        select_ln856_1_fu_1116_p3 when (or_ln941_1_reg_1597(0) = '1') else 
        ap_const_lv8_FF;
    select_ln402_2_fu_1173_p3 <= 
        select_ln856_2_fu_1167_p3 when (or_ln941_2_reg_1620(0) = '1') else 
        ap_const_lv8_FF;
    select_ln402_fu_1071_p3 <= 
        select_ln856_fu_1065_p3 when (or_ln941_reg_1574(0) = '1') else 
        ap_const_lv8_FF;
    select_ln404_1_fu_1095_p3 <= 
        add_ln922_1_reg_1592 when (and_ln937_1_reg_1603(0) = '1') else 
        ap_const_lv7_0;
    select_ln404_2_fu_1146_p3 <= 
        add_ln922_2_reg_1615 when (and_ln937_2_reg_1626(0) = '1') else 
        ap_const_lv7_0;
    select_ln404_fu_1044_p3 <= 
        add_ln922_reg_1569 when (and_ln937_reg_1580(0) = '1') else 
        ap_const_lv7_0;
    select_ln856_1_fu_1116_p3 <= 
        zext_ln856_1_fu_1101_p1 when (p_Result_2_reg_1493_pp0_iter4_reg(0) = '1') else 
        p_Val2_6_reg_1586;
    select_ln856_2_fu_1167_p3 <= 
        zext_ln856_2_fu_1152_p1 when (p_Result_4_reg_1528_pp0_iter4_reg(0) = '1') else 
        p_Val2_9_reg_1609;
    select_ln856_fu_1065_p3 <= 
        zext_ln856_fu_1050_p1 when (p_Result_s_reg_1458_pp0_iter4_reg(0) = '1') else 
        p_Val2_3_reg_1563;
    select_ln934_1_fu_932_p3 <= 
        Range1_all_zeros_1_fu_913_p2 when (tmp_10_fu_918_p3(0) = '1') else 
        Range1_all_ones_1_fu_908_p2;
    select_ln934_2_fu_1003_p3 <= 
        Range1_all_zeros_2_fu_984_p2 when (tmp_14_fu_989_p3(0) = '1') else 
        Range1_all_ones_2_fu_979_p2;
    select_ln934_fu_861_p3 <= 
        Range1_all_zeros_fu_842_p2 when (tmp_6_fu_847_p3(0) = '1') else 
        Range1_all_ones_fu_837_p2;
        sext_ln1393_1_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_7_fu_625_p3),20));

        sext_ln1393_2_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_11_fu_729_p3),20));

        sext_ln1393_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_3_fu_521_p3),20));

        sext_ln859_10_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_6_reg_1433),20));

        sext_ln859_11_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_reg_1438),20));

        sext_ln859_1_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_4_reg_1318),19));

        sext_ln859_2_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1373),20));

        sext_ln859_3_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_reg_1378),20));

        sext_ln859_4_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_6_reg_1328),19));

        sext_ln859_5_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_reg_1338),19));

        sext_ln859_6_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_reg_1403),20));

        sext_ln859_7_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_reg_1408),20));

        sext_ln859_8_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_reg_1348),19));

        sext_ln859_9_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_reg_1358),19));

        sext_ln859_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_reg_1308),19));


    stream_in_24_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, stream_in_24_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_24_TDATA_blk_n <= stream_in_24_TVALID_int_regslice;
        else 
            stream_in_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_24_TREADY <= regslice_both_stream_in_24_V_data_V_U_ack_in;

    stream_in_24_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_24_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_24_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_24_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, stream_out_24_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            stream_out_24_TDATA_blk_n <= stream_out_24_TREADY_int_regslice;
        else 
            stream_out_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_24_TDATA_int_regslice <= ((out3_V_fu_1180_p3 & out2_V_fu_1129_p3) & out1_V_fu_1078_p3);
    stream_out_24_TVALID <= regslice_both_stream_out_24_V_data_V_U_vld_out;

    stream_out_24_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            stream_out_24_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_24_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_918_p3 <= p_Val2_6_fu_898_p2(7 downto 7);
    tmp_14_fu_989_p3 <= p_Val2_9_fu_969_p2(7 downto 7);
    tmp_6_fu_847_p3 <= p_Val2_3_fu_827_p2(7 downto 7);
    trunc_ln1316_1_fu_339_p1 <= r_V_4_fu_333_p2(16 - 1 downto 0);
    trunc_ln1316_2_fu_352_p1 <= r_V_6_fu_346_p2(16 - 1 downto 0);
    trunc_ln1316_3_fu_365_p1 <= r_V_7_fu_359_p2(16 - 1 downto 0);
    trunc_ln1316_4_fu_378_p1 <= r_V_9_fu_372_p2(16 - 1 downto 0);
    trunc_ln1316_5_fu_391_p1 <= r_V_10_fu_385_p2(16 - 1 downto 0);
    trunc_ln1316_fu_323_p1 <= r_V_fu_317_p2(16 - 1 downto 0);
    trunc_ln1393_10_fu_497_p1 <= r_V_11_fu_491_p2(8 - 1 downto 0);
    trunc_ln1393_11_fu_501_p1 <= add_ln1393_17_fu_478_p2(8 - 1 downto 0);
    trunc_ln1393_12_fu_505_p1 <= r_V_11_fu_491_p2(16 - 1 downto 0);
    trunc_ln1393_14_fu_307_p1 <= bias_c3(8 - 1 downto 0);
    trunc_ln1393_1_fu_427_p1 <= add_ln1393_1_fu_401_p2(8 - 1 downto 0);
    trunc_ln1393_2_fu_431_p1 <= r_V_5_fu_417_p2(16 - 1 downto 0);
    trunc_ln1393_3_fu_299_p1 <= bias_c1(8 - 1 downto 0);
    trunc_ln1393_4_fu_536_p3 <= (trunc_ln1393_3_reg_1253_pp0_iter2_reg & ap_const_lv8_0);
    trunc_ln1393_5_fu_460_p1 <= r_V_8_fu_454_p2(8 - 1 downto 0);
    trunc_ln1393_6_fu_464_p1 <= add_ln1393_10_fu_441_p2(8 - 1 downto 0);
    trunc_ln1393_7_fu_468_p1 <= r_V_8_fu_454_p2(16 - 1 downto 0);
    trunc_ln1393_8_fu_303_p1 <= bias_c2(8 - 1 downto 0);
    trunc_ln1393_9_fu_640_p3 <= (trunc_ln1393_8_reg_1278_pp0_iter2_reg & ap_const_lv8_0);
    trunc_ln1393_fu_423_p1 <= r_V_5_fu_417_p2(8 - 1 downto 0);
    trunc_ln1393_s_fu_744_p3 <= (trunc_ln1393_14_reg_1303_pp0_iter2_reg & ap_const_lv8_0);
    v_p1_V_fu_275_p1 <= stream_in_24_TDATA_int_regslice(8 - 1 downto 0);
    xor_ln424_1_fu_926_p2 <= (tmp_10_fu_918_p3 xor ap_const_lv1_1);
    xor_ln424_2_fu_997_p2 <= (tmp_14_fu_989_p3 xor ap_const_lv1_1);
    xor_ln424_fu_855_p2 <= (tmp_6_fu_847_p3 xor ap_const_lv1_1);
    xor_ln937_1_fu_1090_p2 <= (ap_const_lv1_1 xor and_ln937_1_reg_1603);
    xor_ln937_2_fu_1141_p2 <= (ap_const_lv1_1 xor and_ln937_2_reg_1626);
    xor_ln937_fu_1039_p2 <= (ap_const_lv1_1 xor and_ln937_reg_1580);
    zext_ln1319_1_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p2_V_reg_1223),18));
    zext_ln1319_2_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p3_V_reg_1228_pp0_iter1_reg),18));
    zext_ln1319_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_p1_V_reg_1218),18));
    zext_ln423_1_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1476),7));
    zext_ln423_2_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1511),8));
    zext_ln423_3_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1511),7));
    zext_ln423_4_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1546),8));
    zext_ln423_5_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1546),7));
    zext_ln423_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1476),8));
    zext_ln856_1_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_1_fu_1095_p3),8));
    zext_ln856_2_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_2_fu_1146_p3),8));
    zext_ln856_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln404_fu_1044_p3),8));
end behav;
