// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_62_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_24_TVALID,
        stream_out_32_TREADY,
        stream_out_32_TDATA,
        stream_out_32_TVALID,
        stream_out_32_TKEEP,
        stream_out_32_TSTRB,
        stream_out_32_TUSER,
        stream_out_32_TLAST,
        stream_in_24_TDATA,
        stream_in_24_TREADY,
        stream_in_24_TKEEP,
        stream_in_24_TSTRB,
        stream_in_24_TUSER,
        stream_in_24_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   stream_in_24_TVALID;
input   stream_out_32_TREADY;
output  [31:0] stream_out_32_TDATA;
output   stream_out_32_TVALID;
output  [3:0] stream_out_32_TKEEP;
output  [3:0] stream_out_32_TSTRB;
output  [0:0] stream_out_32_TUSER;
output  [0:0] stream_out_32_TLAST;
input  [23:0] stream_in_24_TDATA;
output   stream_in_24_TREADY;
input  [2:0] stream_in_24_TKEEP;
input  [2:0] stream_in_24_TSTRB;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;

reg ap_idle;
reg stream_out_32_TVALID;
reg stream_in_24_TREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg   [0:0] ap_phi_mux_delayed_last_phi_fu_108_p4;
reg   [0:0] ap_phi_mux_last_4_phi_fu_120_p4;
reg    ap_predicate_op26_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] delayed_last_reg_105;
reg   [0:0] last_4_reg_116;
reg    ap_predicate_op71_write_state5;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] tmp_last_V_1_reg_313;
reg   [0:0] tmp_last_V_2_reg_323;
reg   [0:0] tmp_last_V_3_reg_339;
reg    ap_predicate_op56_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
reg    stream_out_32_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_in_24_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
reg   [0:0] tmp_last_V_reg_128;
reg   [0:0] last_6_3885_reg_147;
reg   [0:0] tmp_user_V_3_reg_307;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] grp_fu_179_p1;
wire   [7:0] trunc_ln674_fu_192_p1;
reg   [7:0] trunc_ln674_reg_317;
reg    ap_predicate_op32_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] user_2_fu_200_p2;
reg   [0:0] user_2_reg_327;
wire   [7:0] trunc_ln674_1_fu_205_p1;
reg   [7:0] trunc_ln674_1_reg_333;
reg    ap_predicate_op42_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] user_3_fu_235_p2;
reg   [0:0] user_3_reg_343;
wire   [7:0] trunc_ln674_2_fu_240_p1;
reg   [7:0] trunc_ln674_2_reg_349;
wire   [0:0] user_4_fu_275_p2;
reg    ap_block_pp0_stage3_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_tmp_last_V_phi_fu_133_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_V_reg_128;
wire   [0:0] ap_phi_reg_pp0_iter0_last_6_3885_reg_147;
reg   [0:0] ap_phi_reg_pp0_iter0_tmp_user_V_reg_161;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_user_V_reg_161;
reg   [31:0] p_Val2_s_fu_66;
wire   [31:0] p_Result_3_fu_284_p5;
wire   [31:0] p_Result_2_fu_244_p5;
wire   [31:0] p_Result_1_fu_220_p5;
wire   [31:0] p_Result_s_fu_209_p5;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln674_3_fu_280_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_414;
reg    ap_condition_423;
reg    ap_condition_420;
reg    ap_condition_88;
reg    ap_condition_226;
reg    ap_condition_436;
reg    ap_condition_441;
reg    ap_condition_446;
reg    ap_condition_450;
reg    ap_condition_454;
reg    ap_condition_418;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

pixel_pack_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_420)) begin
        if ((1'b1 == ap_condition_423)) begin
            ap_phi_reg_pp0_iter0_tmp_user_V_reg_161 <= user_3_fu_235_p2;
        end else if (((tmp_last_V_2_reg_323 == 1'd1) & (tmp_last_V_1_reg_313 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_tmp_user_V_reg_161 <= user_2_reg_327;
        end else if ((tmp_last_V_1_reg_313 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_tmp_user_V_reg_161 <= tmp_user_V_3_reg_307;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if ((1'b1 == ap_condition_88)) begin
            ap_phi_reg_pp0_iter1_tmp_user_V_reg_161 <= user_4_fu_275_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_user_V_reg_161 <= ap_phi_reg_pp0_iter0_tmp_user_V_reg_161;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            delayed_last_reg_105 <= 1'd0;
        end else if ((1'b1 == ap_condition_436)) begin
            delayed_last_reg_105 <= last_4_reg_116;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            last_4_reg_116 <= 1'd0;
        end else if ((1'b1 == ap_condition_436)) begin
            last_4_reg_116 <= last_6_3885_reg_147;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if (((last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0))) begin
            last_6_3885_reg_147 <= ap_phi_mux_tmp_last_V_phi_fu_133_p8;
        end else if ((1'b1 == 1'b1)) begin
            last_6_3885_reg_147 <= ap_phi_reg_pp0_iter0_last_6_3885_reg_147;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_418)) begin
        if ((1'b1 == ap_condition_454)) begin
            p_Val2_s_fu_66 <= p_Result_s_fu_209_p5;
        end else if ((1'b1 == ap_condition_450)) begin
            p_Val2_s_fu_66 <= p_Result_1_fu_220_p5;
        end else if ((1'b1 == ap_condition_446)) begin
            p_Val2_s_fu_66 <= p_Result_2_fu_244_p5;
        end else if ((1'b1 == ap_condition_441)) begin
            p_Val2_s_fu_66 <= p_Result_3_fu_284_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if ((1'b1 == ap_condition_88)) begin
            tmp_last_V_reg_128 <= stream_in_24_TLAST;
        end else if ((1'b1 == 1'b1)) begin
            tmp_last_V_reg_128 <= ap_phi_reg_pp0_iter0_tmp_last_V_reg_128;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_last_4_phi_fu_120_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_108_p4 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_1_reg_313 <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_last_V_2_reg_323 <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_last_V_3_reg_339 <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_last_4_phi_fu_120_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_108_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_user_V_3_reg_307 <= stream_in_24_TUSER;
        trunc_ln674_reg_317 <= trunc_ln674_fu_192_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln674_1_reg_333 <= trunc_ln674_1_fu_205_p1;
        user_2_reg_327 <= user_2_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln674_2_reg_349 <= trunc_ln674_2_fu_240_p1;
        user_3_reg_343 <= user_3_fu_235_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_phi_mux_delayed_last_phi_fu_108_p4 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_delayed_last_phi_fu_108_p4 = 1'd0;
        end else if ((1'b1 == ap_condition_414)) begin
            ap_phi_mux_delayed_last_phi_fu_108_p4 = last_4_reg_116;
        end else begin
            ap_phi_mux_delayed_last_phi_fu_108_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_delayed_last_phi_fu_108_p4 = 1'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_last_4_phi_fu_120_p4 = 1'd0;
        end else if ((1'b1 == ap_condition_414)) begin
            ap_phi_mux_last_4_phi_fu_120_p4 = last_6_3885_reg_147;
        end else begin
            ap_phi_mux_last_4_phi_fu_120_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_last_4_phi_fu_120_p4 = 1'd0;
    end
end

always @ (*) begin
    if (((tmp_last_V_3_reg_339 == 1'd0) & (tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0))) begin
        ap_phi_mux_tmp_last_V_phi_fu_133_p8 = stream_in_24_TLAST;
    end else begin
        ap_phi_mux_tmp_last_V_phi_fu_133_p8 = 1'd1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op56_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op26_read_state1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_TVALID;
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op56_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op42_read_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op32_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op26_read_state1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_in_24_TREADY = 1'b1;
    end else begin
        stream_in_24_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op71_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_32_TDATA_blk_n = stream_out_32_TREADY;
    end else begin
        stream_out_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op71_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_32_TVALID = 1'b1;
    end else begin
        stream_out_32_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op71_write_state5 == 1'b1) & (stream_out_32_TREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_predicate_op26_read_state1 == 1'b1) & (stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op71_write_state5 == 1'b1) & (stream_out_32_TREADY == 1'b0)))) | ((ap_predicate_op26_read_state1 == 1'b1) & (stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op71_write_state5 == 1'b1) & (stream_out_32_TREADY == 1'b0)))) | ((ap_predicate_op26_read_state1 == 1'b1) & (stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op32_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op32_read_state2 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op42_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op42_read_state3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_predicate_op56_read_state4 == 1'b1) & (stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_predicate_op56_read_state4 == 1'b1) & (stream_in_24_TVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_predicate_op26_read_state1 == 1'b1) & (stream_in_24_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op32_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op42_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((ap_predicate_op56_read_state4 == 1'b1) & (stream_in_24_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((ap_predicate_op71_write_state5 == 1'b1) & (stream_out_32_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((ap_predicate_op71_write_state5 == 1'b1) & (stream_out_32_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_226 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_414 = ((1'b0 == ap_block_pp0_stage0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_418 = ((last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_420 = ((1'b0 == ap_block_pp0_stage2_11001) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_423 = ((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (grp_fu_179_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_436 = ((1'b0 == ap_block_pp0_stage0_11001) & (delayed_last_reg_105 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_441 = ((tmp_last_V_3_reg_339 == 1'd0) & (tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_446 = ((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (grp_fu_179_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_450 = ((tmp_last_V_2_reg_323 == 1'd1) & (tmp_last_V_1_reg_313 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_454 = ((tmp_last_V_1_reg_313 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_88 = ((tmp_last_V_3_reg_339 == 1'd0) & (tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_last_6_3885_reg_147 = 1'd1;

assign ap_phi_reg_pp0_iter0_tmp_last_V_reg_128 = 1'd1;

always @ (*) begin
    ap_predicate_op26_read_state1 = ((ap_phi_mux_last_4_phi_fu_120_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_108_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op32_read_state2 = ((tmp_last_V_1_reg_313 == 1'd0) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0));
end

always @ (*) begin
    ap_predicate_op42_read_state3 = ((tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0));
end

always @ (*) begin
    ap_predicate_op56_read_state4 = ((tmp_last_V_3_reg_339 == 1'd0) & (tmp_last_V_2_reg_323 == 1'd0) & (tmp_last_V_1_reg_313 == 1'd0) & (last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_write_state5 = ((last_4_reg_116 == 1'd0) & (delayed_last_reg_105 == 1'd0));
end

assign grp_fu_179_p1 = stream_in_24_TLAST;

assign p_Result_1_fu_220_p5 = {{p_Result_s_fu_209_p5[31:16]}, {trunc_ln674_1_reg_333}, {p_Result_s_fu_209_p5[7:0]}};

assign p_Result_2_fu_244_p5 = {{p_Result_1_fu_220_p5[31:24]}, {trunc_ln674_2_fu_240_p1}, {p_Result_1_fu_220_p5[15:0]}};

assign p_Result_3_fu_284_p5 = {{{{trunc_ln674_3_fu_280_p1}, {trunc_ln674_2_reg_349}}, {trunc_ln674_1_reg_333}}, {trunc_ln674_reg_317}};

assign p_Result_s_fu_209_p5 = {{p_Val2_s_fu_66[31:8]}, {trunc_ln674_reg_317}};

assign stream_out_32_TDATA = p_Val2_s_fu_66;

assign stream_out_32_TKEEP = 4'd0;

assign stream_out_32_TLAST = tmp_last_V_reg_128;

assign stream_out_32_TSTRB = 4'd0;

assign stream_out_32_TUSER = ap_phi_reg_pp0_iter1_tmp_user_V_reg_161;

assign trunc_ln674_1_fu_205_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln674_2_fu_240_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln674_3_fu_280_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln674_fu_192_p1 = stream_in_24_TDATA[7:0];

assign user_2_fu_200_p2 = (tmp_user_V_3_reg_307 | stream_in_24_TUSER);

assign user_3_fu_235_p2 = (user_2_reg_327 | stream_in_24_TUSER);

assign user_4_fu_275_p2 = (user_3_reg_343 | stream_in_24_TUSER);

endmodule //pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_62_5
