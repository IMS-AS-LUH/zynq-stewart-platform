-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity trace_cntrl_64 is
generic (
    C_S_AXI_TRACE_CNTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_TRACE_CNTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    trace_64_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    trace_64_TVALID : IN STD_LOGIC;
    trace_64_TREADY : OUT STD_LOGIC;
    trace_64_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    trace_64_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    trace_64_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    trace_64_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    trace_64_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    trace_64_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    capture_64_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    capture_64_TVALID : OUT STD_LOGIC;
    capture_64_TREADY : IN STD_LOGIC;
    capture_64_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    capture_64_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    capture_64_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    capture_64_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    capture_64_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    capture_64_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_trace_cntrl_AWVALID : IN STD_LOGIC;
    s_axi_trace_cntrl_AWREADY : OUT STD_LOGIC;
    s_axi_trace_cntrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TRACE_CNTRL_ADDR_WIDTH-1 downto 0);
    s_axi_trace_cntrl_WVALID : IN STD_LOGIC;
    s_axi_trace_cntrl_WREADY : OUT STD_LOGIC;
    s_axi_trace_cntrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_TRACE_CNTRL_DATA_WIDTH-1 downto 0);
    s_axi_trace_cntrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_TRACE_CNTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_trace_cntrl_ARVALID : IN STD_LOGIC;
    s_axi_trace_cntrl_ARREADY : OUT STD_LOGIC;
    s_axi_trace_cntrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_TRACE_CNTRL_ADDR_WIDTH-1 downto 0);
    s_axi_trace_cntrl_RVALID : OUT STD_LOGIC;
    s_axi_trace_cntrl_RREADY : IN STD_LOGIC;
    s_axi_trace_cntrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_TRACE_CNTRL_DATA_WIDTH-1 downto 0);
    s_axi_trace_cntrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_trace_cntrl_BVALID : OUT STD_LOGIC;
    s_axi_trace_cntrl_BREADY : IN STD_LOGIC;
    s_axi_trace_cntrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of trace_cntrl_64 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "trace_cntrl_64_trace_cntrl_64,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.924000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=436,HLS_SYN_LUT=623,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal trigger : STD_LOGIC_VECTOR (63 downto 0);
    signal length_r : STD_LOGIC_VECTOR (31 downto 0);
    signal length_r_read_reg_129 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_139 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_idle : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY : STD_LOGIC;
    signal grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal regslice_both_capture_64_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal regslice_both_trace_64_V_data_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal trace_64_TVALID_int_regslice : STD_LOGIC;
    signal trace_64_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_trace_64_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_trace_64_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_trace_64_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_user_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_trace_64_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_last_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_trace_64_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_id_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_trace_64_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_trace_64_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal trace_64_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_trace_64_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_trace_64_V_dest_V_U_ack_in : STD_LOGIC;
    signal capture_64_TVALID_int_regslice : STD_LOGIC;
    signal capture_64_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_capture_64_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_capture_64_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_capture_64_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_capture_64_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component trace_cntrl_64_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trace_64_TVALID : IN STD_LOGIC;
        capture_64_TREADY : IN STD_LOGIC;
        length_r : IN STD_LOGIC_VECTOR (31 downto 0);
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        capture_64_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        capture_64_TVALID : OUT STD_LOGIC;
        capture_64_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        capture_64_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        capture_64_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        capture_64_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        capture_64_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        capture_64_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        trace_64_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        trace_64_TREADY : OUT STD_LOGIC;
        trace_64_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        trace_64_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        trace_64_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        trace_64_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        trace_64_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        trace_64_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_i : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component trace_cntrl_64_trace_cntrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        trigger : OUT STD_LOGIC_VECTOR (63 downto 0);
        length_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component trace_cntrl_64_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84 : component trace_cntrl_64_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start,
        ap_done => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done,
        ap_idle => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_idle,
        ap_ready => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready,
        trace_64_TVALID => trace_64_TVALID_int_regslice,
        capture_64_TREADY => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY,
        length_r => length_r_read_reg_129,
        sub => sub_reg_139,
        capture_64_TDATA => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA,
        capture_64_TVALID => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        capture_64_TKEEP => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP,
        capture_64_TSTRB => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB,
        capture_64_TUSER => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER,
        capture_64_TLAST => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST,
        capture_64_TID => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID,
        capture_64_TDEST => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST,
        trace_64_TDATA => trace_64_TDATA_int_regslice,
        trace_64_TREADY => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY,
        trace_64_TKEEP => trace_64_TKEEP_int_regslice,
        trace_64_TSTRB => trace_64_TSTRB_int_regslice,
        trace_64_TUSER => trace_64_TUSER_int_regslice,
        trace_64_TLAST => trace_64_TLAST_int_regslice,
        trace_64_TID => trace_64_TID_int_regslice,
        trace_64_TDEST => trace_64_TDEST_int_regslice,
        conv_i => empty_reg_134);

    trace_cntrl_s_axi_U : component trace_cntrl_64_trace_cntrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_TRACE_CNTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_TRACE_CNTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_trace_cntrl_AWVALID,
        AWREADY => s_axi_trace_cntrl_AWREADY,
        AWADDR => s_axi_trace_cntrl_AWADDR,
        WVALID => s_axi_trace_cntrl_WVALID,
        WREADY => s_axi_trace_cntrl_WREADY,
        WDATA => s_axi_trace_cntrl_WDATA,
        WSTRB => s_axi_trace_cntrl_WSTRB,
        ARVALID => s_axi_trace_cntrl_ARVALID,
        ARREADY => s_axi_trace_cntrl_ARREADY,
        ARADDR => s_axi_trace_cntrl_ARADDR,
        RVALID => s_axi_trace_cntrl_RVALID,
        RREADY => s_axi_trace_cntrl_RREADY,
        RDATA => s_axi_trace_cntrl_RDATA,
        RRESP => s_axi_trace_cntrl_RRESP,
        BVALID => s_axi_trace_cntrl_BVALID,
        BREADY => s_axi_trace_cntrl_BREADY,
        BRESP => s_axi_trace_cntrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        trigger => trigger,
        length_r => length_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    regslice_both_trace_64_V_data_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TDATA,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_data_V_U_ack_in,
        data_out => trace_64_TDATA_int_regslice,
        vld_out => trace_64_TVALID_int_regslice,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_data_V_U_apdone_blk);

    regslice_both_trace_64_V_keep_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TKEEP,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_keep_V_U_ack_in,
        data_out => trace_64_TKEEP_int_regslice,
        vld_out => regslice_both_trace_64_V_keep_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_keep_V_U_apdone_blk);

    regslice_both_trace_64_V_strb_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TSTRB,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_strb_V_U_ack_in,
        data_out => trace_64_TSTRB_int_regslice,
        vld_out => regslice_both_trace_64_V_strb_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_strb_V_U_apdone_blk);

    regslice_both_trace_64_V_user_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TUSER,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_user_V_U_ack_in,
        data_out => trace_64_TUSER_int_regslice,
        vld_out => regslice_both_trace_64_V_user_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_user_V_U_apdone_blk);

    regslice_both_trace_64_V_last_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TLAST,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_last_V_U_ack_in,
        data_out => trace_64_TLAST_int_regslice,
        vld_out => regslice_both_trace_64_V_last_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_last_V_U_apdone_blk);

    regslice_both_trace_64_V_id_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TID,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_id_V_U_ack_in,
        data_out => trace_64_TID_int_regslice,
        vld_out => regslice_both_trace_64_V_id_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_id_V_U_apdone_blk);

    regslice_both_trace_64_V_dest_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => trace_64_TDEST,
        vld_in => trace_64_TVALID,
        ack_in => regslice_both_trace_64_V_dest_V_U_ack_in,
        data_out => trace_64_TDEST_int_regslice,
        vld_out => regslice_both_trace_64_V_dest_V_U_vld_out,
        ack_out => trace_64_TREADY_int_regslice,
        apdone_blk => regslice_both_trace_64_V_dest_V_U_apdone_blk);

    regslice_both_capture_64_V_data_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => capture_64_TREADY_int_regslice,
        data_out => capture_64_TDATA,
        vld_out => regslice_both_capture_64_V_data_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_data_V_U_apdone_blk);

    regslice_both_capture_64_V_keep_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_keep_V_U_ack_in_dummy,
        data_out => capture_64_TKEEP,
        vld_out => regslice_both_capture_64_V_keep_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_keep_V_U_apdone_blk);

    regslice_both_capture_64_V_strb_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_strb_V_U_ack_in_dummy,
        data_out => capture_64_TSTRB,
        vld_out => regslice_both_capture_64_V_strb_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_strb_V_U_apdone_blk);

    regslice_both_capture_64_V_user_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_user_V_U_ack_in_dummy,
        data_out => capture_64_TUSER,
        vld_out => regslice_both_capture_64_V_user_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_user_V_U_apdone_blk);

    regslice_both_capture_64_V_last_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_last_V_U_ack_in_dummy,
        data_out => capture_64_TLAST,
        vld_out => regslice_both_capture_64_V_last_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_last_V_U_apdone_blk);

    regslice_both_capture_64_V_id_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_id_V_U_ack_in_dummy,
        data_out => capture_64_TID,
        vld_out => regslice_both_capture_64_V_id_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_id_V_U_apdone_blk);

    regslice_both_capture_64_V_dest_V_U : component trace_cntrl_64_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST,
        vld_in => grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID,
        ack_in => regslice_both_capture_64_V_dest_V_U_ack_in_dummy,
        data_out => capture_64_TDEST,
        vld_out => regslice_both_capture_64_V_dest_V_U_vld_out,
        ack_out => capture_64_TREADY,
        apdone_blk => regslice_both_capture_64_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_134 <= empty_fu_119_p1;
                length_r_read_reg_129 <= length_r;
                sub_reg_139 <= sub_fu_123_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state4, regslice_both_capture_64_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_capture_64_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done)
    begin
        if ((grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(regslice_both_capture_64_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_capture_64_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state4, regslice_both_capture_64_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_capture_64_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state4, regslice_both_capture_64_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_capture_64_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    capture_64_TVALID <= regslice_both_capture_64_V_data_V_U_vld_out;
    capture_64_TVALID_int_regslice <= grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID;
    empty_fu_119_p1 <= trigger(32 - 1 downto 0);
    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start <= grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg;
    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY <= (capture_64_TREADY_int_regslice and ap_CS_fsm_state3);
    sub_fu_123_p2 <= std_logic_vector(unsigned(length_r) + unsigned(ap_const_lv32_FFFFFFFF));
    trace_64_TREADY <= regslice_both_trace_64_V_data_V_U_ack_in;

    trace_64_TREADY_int_regslice_assign_proc : process(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            trace_64_TREADY_int_regslice <= grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY;
        else 
            trace_64_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

end behav;
