// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="trace_cntrl_64_trace_cntrl_64,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.924000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=436,HLS_SYN_LUT=623,HLS_VERSION=2021_2}" *)

module trace_cntrl_64 (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        trace_64_TDATA,
        trace_64_TVALID,
        trace_64_TREADY,
        trace_64_TKEEP,
        trace_64_TSTRB,
        trace_64_TUSER,
        trace_64_TLAST,
        trace_64_TID,
        trace_64_TDEST,
        capture_64_TDATA,
        capture_64_TVALID,
        capture_64_TREADY,
        capture_64_TKEEP,
        capture_64_TSTRB,
        capture_64_TUSER,
        capture_64_TLAST,
        capture_64_TID,
        capture_64_TDEST,
        s_axi_trace_cntrl_AWVALID,
        s_axi_trace_cntrl_AWREADY,
        s_axi_trace_cntrl_AWADDR,
        s_axi_trace_cntrl_WVALID,
        s_axi_trace_cntrl_WREADY,
        s_axi_trace_cntrl_WDATA,
        s_axi_trace_cntrl_WSTRB,
        s_axi_trace_cntrl_ARVALID,
        s_axi_trace_cntrl_ARREADY,
        s_axi_trace_cntrl_ARADDR,
        s_axi_trace_cntrl_RVALID,
        s_axi_trace_cntrl_RREADY,
        s_axi_trace_cntrl_RDATA,
        s_axi_trace_cntrl_RRESP,
        s_axi_trace_cntrl_BVALID,
        s_axi_trace_cntrl_BREADY,
        s_axi_trace_cntrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    C_S_AXI_TRACE_CNTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_TRACE_CNTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_TRACE_CNTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input  [63:0] trace_64_TDATA;
input   trace_64_TVALID;
output   trace_64_TREADY;
input  [7:0] trace_64_TKEEP;
input  [7:0] trace_64_TSTRB;
input  [0:0] trace_64_TUSER;
input  [0:0] trace_64_TLAST;
input  [0:0] trace_64_TID;
input  [0:0] trace_64_TDEST;
output  [63:0] capture_64_TDATA;
output   capture_64_TVALID;
input   capture_64_TREADY;
output  [7:0] capture_64_TKEEP;
output  [7:0] capture_64_TSTRB;
output  [0:0] capture_64_TUSER;
output  [0:0] capture_64_TLAST;
output  [0:0] capture_64_TID;
output  [0:0] capture_64_TDEST;
input   s_axi_trace_cntrl_AWVALID;
output   s_axi_trace_cntrl_AWREADY;
input  [C_S_AXI_TRACE_CNTRL_ADDR_WIDTH - 1:0] s_axi_trace_cntrl_AWADDR;
input   s_axi_trace_cntrl_WVALID;
output   s_axi_trace_cntrl_WREADY;
input  [C_S_AXI_TRACE_CNTRL_DATA_WIDTH - 1:0] s_axi_trace_cntrl_WDATA;
input  [C_S_AXI_TRACE_CNTRL_WSTRB_WIDTH - 1:0] s_axi_trace_cntrl_WSTRB;
input   s_axi_trace_cntrl_ARVALID;
output   s_axi_trace_cntrl_ARREADY;
input  [C_S_AXI_TRACE_CNTRL_ADDR_WIDTH - 1:0] s_axi_trace_cntrl_ARADDR;
output   s_axi_trace_cntrl_RVALID;
input   s_axi_trace_cntrl_RREADY;
output  [C_S_AXI_TRACE_CNTRL_DATA_WIDTH - 1:0] s_axi_trace_cntrl_RDATA;
output  [1:0] s_axi_trace_cntrl_RRESP;
output   s_axi_trace_cntrl_BVALID;
input   s_axi_trace_cntrl_BREADY;
output  [1:0] s_axi_trace_cntrl_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] trigger;
wire   [31:0] length_r;
reg   [31:0] length_r_read_reg_129;
wire   [31:0] empty_fu_119_p1;
reg   [31:0] empty_reg_134;
wire   [31:0] sub_fu_123_p2;
reg   [31:0] sub_reg_139;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_idle;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY;
wire   [63:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID;
wire   [7:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP;
wire   [7:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB;
wire   [0:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER;
wire   [0:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST;
wire   [0:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID;
wire   [0:0] grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST;
wire    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY;
reg    grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    regslice_both_capture_64_V_data_V_U_apdone_blk;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    regslice_both_trace_64_V_data_V_U_apdone_blk;
wire   [63:0] trace_64_TDATA_int_regslice;
wire    trace_64_TVALID_int_regslice;
reg    trace_64_TREADY_int_regslice;
wire    regslice_both_trace_64_V_data_V_U_ack_in;
wire    regslice_both_trace_64_V_keep_V_U_apdone_blk;
wire   [7:0] trace_64_TKEEP_int_regslice;
wire    regslice_both_trace_64_V_keep_V_U_vld_out;
wire    regslice_both_trace_64_V_keep_V_U_ack_in;
wire    regslice_both_trace_64_V_strb_V_U_apdone_blk;
wire   [7:0] trace_64_TSTRB_int_regslice;
wire    regslice_both_trace_64_V_strb_V_U_vld_out;
wire    regslice_both_trace_64_V_strb_V_U_ack_in;
wire    regslice_both_trace_64_V_user_V_U_apdone_blk;
wire   [0:0] trace_64_TUSER_int_regslice;
wire    regslice_both_trace_64_V_user_V_U_vld_out;
wire    regslice_both_trace_64_V_user_V_U_ack_in;
wire    regslice_both_trace_64_V_last_V_U_apdone_blk;
wire   [0:0] trace_64_TLAST_int_regslice;
wire    regslice_both_trace_64_V_last_V_U_vld_out;
wire    regslice_both_trace_64_V_last_V_U_ack_in;
wire    regslice_both_trace_64_V_id_V_U_apdone_blk;
wire   [0:0] trace_64_TID_int_regslice;
wire    regslice_both_trace_64_V_id_V_U_vld_out;
wire    regslice_both_trace_64_V_id_V_U_ack_in;
wire    regslice_both_trace_64_V_dest_V_U_apdone_blk;
wire   [0:0] trace_64_TDEST_int_regslice;
wire    regslice_both_trace_64_V_dest_V_U_vld_out;
wire    regslice_both_trace_64_V_dest_V_U_ack_in;
wire    capture_64_TVALID_int_regslice;
wire    capture_64_TREADY_int_regslice;
wire    regslice_both_capture_64_V_data_V_U_vld_out;
wire    regslice_both_capture_64_V_keep_V_U_apdone_blk;
wire    regslice_both_capture_64_V_keep_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_keep_V_U_vld_out;
wire    regslice_both_capture_64_V_strb_V_U_apdone_blk;
wire    regslice_both_capture_64_V_strb_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_strb_V_U_vld_out;
wire    regslice_both_capture_64_V_user_V_U_apdone_blk;
wire    regslice_both_capture_64_V_user_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_user_V_U_vld_out;
wire    regslice_both_capture_64_V_last_V_U_apdone_blk;
wire    regslice_both_capture_64_V_last_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_last_V_U_vld_out;
wire    regslice_both_capture_64_V_id_V_U_apdone_blk;
wire    regslice_both_capture_64_V_id_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_id_V_U_vld_out;
wire    regslice_both_capture_64_V_dest_V_U_apdone_blk;
wire    regslice_both_capture_64_V_dest_V_U_ack_in_dummy;
wire    regslice_both_capture_64_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg = 1'b0;
end

trace_cntrl_64_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1 grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start),
    .ap_done(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done),
    .ap_idle(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_idle),
    .ap_ready(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready),
    .trace_64_TVALID(trace_64_TVALID_int_regslice),
    .capture_64_TREADY(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY),
    .length_r(length_r_read_reg_129),
    .sub(sub_reg_139),
    .capture_64_TDATA(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA),
    .capture_64_TVALID(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .capture_64_TKEEP(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP),
    .capture_64_TSTRB(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB),
    .capture_64_TUSER(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER),
    .capture_64_TLAST(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST),
    .capture_64_TID(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID),
    .capture_64_TDEST(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST),
    .trace_64_TDATA(trace_64_TDATA_int_regslice),
    .trace_64_TREADY(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY),
    .trace_64_TKEEP(trace_64_TKEEP_int_regslice),
    .trace_64_TSTRB(trace_64_TSTRB_int_regslice),
    .trace_64_TUSER(trace_64_TUSER_int_regslice),
    .trace_64_TLAST(trace_64_TLAST_int_regslice),
    .trace_64_TID(trace_64_TID_int_regslice),
    .trace_64_TDEST(trace_64_TDEST_int_regslice),
    .conv_i(empty_reg_134)
);

trace_cntrl_64_trace_cntrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_TRACE_CNTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_TRACE_CNTRL_DATA_WIDTH ))
trace_cntrl_s_axi_U(
    .AWVALID(s_axi_trace_cntrl_AWVALID),
    .AWREADY(s_axi_trace_cntrl_AWREADY),
    .AWADDR(s_axi_trace_cntrl_AWADDR),
    .WVALID(s_axi_trace_cntrl_WVALID),
    .WREADY(s_axi_trace_cntrl_WREADY),
    .WDATA(s_axi_trace_cntrl_WDATA),
    .WSTRB(s_axi_trace_cntrl_WSTRB),
    .ARVALID(s_axi_trace_cntrl_ARVALID),
    .ARREADY(s_axi_trace_cntrl_ARREADY),
    .ARADDR(s_axi_trace_cntrl_ARADDR),
    .RVALID(s_axi_trace_cntrl_RVALID),
    .RREADY(s_axi_trace_cntrl_RREADY),
    .RDATA(s_axi_trace_cntrl_RDATA),
    .RRESP(s_axi_trace_cntrl_RRESP),
    .BVALID(s_axi_trace_cntrl_BVALID),
    .BREADY(s_axi_trace_cntrl_BREADY),
    .BRESP(s_axi_trace_cntrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .trigger(trigger),
    .length_r(length_r),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 64 ))
regslice_both_trace_64_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TDATA),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_data_V_U_ack_in),
    .data_out(trace_64_TDATA_int_regslice),
    .vld_out(trace_64_TVALID_int_regslice),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_data_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 8 ))
regslice_both_trace_64_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TKEEP),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_keep_V_U_ack_in),
    .data_out(trace_64_TKEEP_int_regslice),
    .vld_out(regslice_both_trace_64_V_keep_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_keep_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 8 ))
regslice_both_trace_64_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TSTRB),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_strb_V_U_ack_in),
    .data_out(trace_64_TSTRB_int_regslice),
    .vld_out(regslice_both_trace_64_V_strb_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_strb_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_trace_64_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TUSER),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_user_V_U_ack_in),
    .data_out(trace_64_TUSER_int_regslice),
    .vld_out(regslice_both_trace_64_V_user_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_user_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_trace_64_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TLAST),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_last_V_U_ack_in),
    .data_out(trace_64_TLAST_int_regslice),
    .vld_out(regslice_both_trace_64_V_last_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_last_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_trace_64_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TID),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_id_V_U_ack_in),
    .data_out(trace_64_TID_int_regslice),
    .vld_out(regslice_both_trace_64_V_id_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_id_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_trace_64_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(trace_64_TDEST),
    .vld_in(trace_64_TVALID),
    .ack_in(regslice_both_trace_64_V_dest_V_U_ack_in),
    .data_out(trace_64_TDEST_int_regslice),
    .vld_out(regslice_both_trace_64_V_dest_V_U_vld_out),
    .ack_out(trace_64_TREADY_int_regslice),
    .apdone_blk(regslice_both_trace_64_V_dest_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 64 ))
regslice_both_capture_64_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDATA),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(capture_64_TREADY_int_regslice),
    .data_out(capture_64_TDATA),
    .vld_out(regslice_both_capture_64_V_data_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_data_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 8 ))
regslice_both_capture_64_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TKEEP),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_keep_V_U_ack_in_dummy),
    .data_out(capture_64_TKEEP),
    .vld_out(regslice_both_capture_64_V_keep_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_keep_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 8 ))
regslice_both_capture_64_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TSTRB),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_strb_V_U_ack_in_dummy),
    .data_out(capture_64_TSTRB),
    .vld_out(regslice_both_capture_64_V_strb_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_strb_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_capture_64_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TUSER),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_user_V_U_ack_in_dummy),
    .data_out(capture_64_TUSER),
    .vld_out(regslice_both_capture_64_V_user_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_user_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_capture_64_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TLAST),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_last_V_U_ack_in_dummy),
    .data_out(capture_64_TLAST),
    .vld_out(regslice_both_capture_64_V_last_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_last_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_capture_64_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TID),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_id_V_U_ack_in_dummy),
    .data_out(capture_64_TID),
    .vld_out(regslice_both_capture_64_V_id_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_id_V_U_apdone_blk)
);

trace_cntrl_64_regslice_both #(
    .DataWidth( 1 ))
regslice_both_capture_64_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TDEST),
    .vld_in(grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID),
    .ack_in(regslice_both_capture_64_V_dest_V_U_ack_in_dummy),
    .data_out(capture_64_TDEST),
    .vld_out(regslice_both_capture_64_V_dest_V_U_vld_out),
    .ack_out(capture_64_TREADY),
    .apdone_blk(regslice_both_capture_64_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= 1'b1;
        end else if ((grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_ready == 1'b1)) begin
            grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_134 <= empty_fu_119_p1;
        length_r_read_reg_129 <= length_r;
        sub_reg_139 <= sub_fu_123_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_capture_64_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_capture_64_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_capture_64_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trace_64_TREADY_int_regslice = grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_trace_64_TREADY;
    end else begin
        trace_64_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_capture_64_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];


assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign capture_64_TVALID = regslice_both_capture_64_V_data_V_U_vld_out;

assign capture_64_TVALID_int_regslice = grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TVALID;

assign empty_fu_119_p1 = trigger[31:0];

assign grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start = grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_ap_start_reg;

assign grp_trace_cntrl_64_Pipeline_VITIS_LOOP_27_1_fu_84_capture_64_TREADY = (capture_64_TREADY_int_regslice & ap_CS_fsm_state3);

assign sub_fu_123_p2 = ($signed(length_r) + $signed(32'd4294967295));

assign trace_64_TREADY = regslice_both_trace_64_V_data_V_U_ack_in;


reg find_kernel_block = 0;
// synthesis translate_off
`include "trace_cntrl_64_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "trace_cntrl_64_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //trace_cntrl_64


