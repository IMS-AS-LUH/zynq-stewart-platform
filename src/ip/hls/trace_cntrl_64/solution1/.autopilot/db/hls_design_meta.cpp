#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("trace_64_TDATA", 64, hls_in, 0, "axis", "in_data", 1),
	Port_Property("trace_64_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("trace_64_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("trace_64_TKEEP", 8, hls_in, 1, "axis", "in_data", 1),
	Port_Property("trace_64_TSTRB", 8, hls_in, 2, "axis", "in_data", 1),
	Port_Property("trace_64_TUSER", 1, hls_in, 3, "axis", "in_data", 1),
	Port_Property("trace_64_TLAST", 1, hls_in, 4, "axis", "in_data", 1),
	Port_Property("trace_64_TID", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("trace_64_TDEST", 1, hls_in, 6, "axis", "in_data", 1),
	Port_Property("capture_64_TDATA", 64, hls_out, 7, "axis", "out_data", 1),
	Port_Property("capture_64_TVALID", 1, hls_out, 13, "axis", "out_vld", 1),
	Port_Property("capture_64_TREADY", 1, hls_in, 13, "axis", "out_acc", 1),
	Port_Property("capture_64_TKEEP", 8, hls_out, 8, "axis", "out_data", 1),
	Port_Property("capture_64_TSTRB", 8, hls_out, 9, "axis", "out_data", 1),
	Port_Property("capture_64_TUSER", 1, hls_out, 10, "axis", "out_data", 1),
	Port_Property("capture_64_TLAST", 1, hls_out, 11, "axis", "out_data", 1),
	Port_Property("capture_64_TID", 1, hls_out, 12, "axis", "out_data", 1),
	Port_Property("capture_64_TDEST", 1, hls_out, 13, "axis", "out_data", 1),
	Port_Property("s_axi_trace_cntrl_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_trace_cntrl_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "trace_cntrl_64";
